net {
  domain = "oyunkeyf.net"
  protocol = "http://"
  base_url = ${net.protocol}${net.domain}
  asset {
    domain = ${net.domain}
    version = 23
  }
}
forcedev = false
play {
  i18n {
    langs=[en,tr]
  }
  http {
    session {
      cookieName = "oyun2"
      maxAge = 365 days
    }
  }
}

prismic {
  api_url = "https://oyunkeyf.cdn.prismic.io/api"
}

chat {
  collection.chat = chat
  max_lines = 50
  net.domain = ${net.domain}
  actor.name = chat
}

pref {
  collection.pref = pref
  cache.ttl = 30 minutes
}

app {
  renderer.name = "renderer"
  web_path = "public"
}

cli {
  username = "eguneys"
}

security {
  collection.security = security
  flood.duration = 60 seconds
  email_confirm {
    enabled = false
  }

  disposable_email {
    provider_url = "https://raw.githubusercontent.com/ornicar/disposable-email-domains/master/index.json"
    refresh_delay = 1 hour
  }
  recaptcha = ${recaptcha}
}
recaptcha {
  endpoint = "https://www.google.com/recaptcha/api/siteverify"
#  public_key = "6Le5Mx4TAAAAAIzSs3pJ1Da0l2LeX-ADHsLQcaqt"
  public_key = "6Lc8Bx8TAAAAAAT-Gk3e6GRcb5jk-TI2FrFZ6vwo"
  private_key = ""
  enabled = false
}

i18n {
  web_path.relative = ${app.web_path}/trans
  file_path.relative = "conf"
  request_handler.protocol = ${net.protocol}
  cdn_domain = ${net.asset.domain}
}

lobby {
  message.ttl = 30 seconds
  socket {
    name = lobby-socket
  }      
  actor.name = lobby-actor
  broom_period = 1 second
}

masa {
  collection {
    masa = masa2
    pairing = masa_pairing
    player = masa_player
    leaderboard = masa_leaderboard
  }
  history.message.ttl = 30 seconds
  online.ttl = 7 seconds
  socket {
    name = masa-socket
    timeout = 2 minutes
  }
  api_actor.name = masa-api
  sequencer {
    timeout = 10 minutes
  }
  created.cache.ttl = 2 seconds
  leaderboard.cache.ttl = 1 hour
}

game {
  cached.nb.ttl = 1 hour
  collection {
    game = game10
  }     
}

round {
  active.ttl = 30 seconds
  player {
    disconnect.timeout = 90 seconds
    ragequit.timeout = 10 seconds
  }
  socket {
    name = round-socket
    timeout = 30 seconds
  }
  actor.map.name = round-map
}

hub {
  actor {
    renderer = ${app.renderer.name}
    lobby = ${lobby.actor.name}
    round = {
      map = ${round.actor.map.name}
    }
    chat = ${chat.actor.name}
    user_register = ${socket.user_register.name}
  }
  socket {
    site = ${site.socket.name}
    lobby = ${lobby.socket.name}
    round = ${round.socket.name}
    masa = ${masa.socket.name}
  }
}
app {
  scheduler {
    disabled = false
    debug = false
  }
}

memo {
  collection {
    cache = cache
  }
}

site {
  socket {
    name = site-socket
    uid.ttl = 10 seconds
  }
}

user {
  cached.nb.ttl = 10 minutes
  online.ttl = 7 seconds
  collection {
    user = user4
    ranking = ranking
  }
}

fishnet {
  actor.name = "fishnet"
}

application {
  global="oyun.app.Global"
}

socket {
  hub.name = socket.hub
  user_register.name = socket.user-register
  population.name = socket.population
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
}