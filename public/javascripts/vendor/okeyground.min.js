!function(e) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define([], e); else {
        var t;
        t = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, 
        t.Okeyground = e();
    }
}(function() {
    var e;
    return function t(e, n, r) {
        function a(o, u) {
            if (!n[o]) {
                if (!e[o]) {
                    var l = "function" == typeof require && require;
                    if (!u && l) return l(o, !0);
                    if (i) return i(o, !0);
                    var d = new Error("Cannot find module '" + o + "'");
                    throw d.code = "MODULE_NOT_FOUND", d;
                }
                var s = n[o] = {
                    exports: {}
                };
                e[o][0].call(s.exports, function(t) {
                    var n = e[o][1][t];
                    return a(n ? n : t);
                }, s, s.exports, t, e, n, r);
            }
            return n[o].exports;
        }
        for (var i = "function" == typeof require && require, o = 0; o < r.length; o++) a(r[o]);
        return a;
    }({
        1: [ function(e, t, n) {
            !function(e) {
                /**
	 * Merge two objects recursively
	 * @param mixed input
	 * @param mixed extend
	 * @return mixed
	 */
                function n(e, t) {
                    if ("object" !== a(e)) return t;
                    for (var r in t) "object" === a(e[r]) && "object" === a(t[r]) ? e[r] = n(e[r], t[r]) : e[r] = t[r];
                    return e;
                }
                /**
	 * Merge two or more objects
	 * @param bool clone
	 * @param bool recursive
	 * @param array argv
	 * @return object
	 */
                function r(e, t, r) {
                    var o = r[0], u = r.length;
                    (e || "object" !== a(o)) && (o = {});
                    for (var l = 0; u > l; ++l) {
                        var d = r[l], s = a(d);
                        if ("object" === s) for (var f in d) {
                            var c = e ? i.clone(d[f]) : d[f];
                            t ? o[f] = n(o[f], c) : o[f] = c;
                        }
                    }
                    return o;
                }
                /**
	 * Get type of variable
	 * @param mixed input
	 * @return string
	 *
	 * @see http://jsperf.com/typeofvar
	 */
                function a(e) {
                    return {}.toString.call(e).slice(8, -1).toLowerCase();
                }
                /**
	 * Merge one or more objects 
	 * @param bool? clone
	 * @param mixed,... arguments
	 * @return object
	 */
                var i = function(e) {
                    return r(e === !0, !1, arguments);
                }, o = "merge";
                /**
	 * Merge two or more objects recursively 
	 * @param bool? clone
	 * @param mixed,... arguments
	 * @return object
	 */
                i.recursive = function(e) {
                    return r(e === !0, !0, arguments);
                }, /**
	 * Clone the input removing any reference
	 * @param mixed input
	 * @return mixed
	 */
                i.clone = function(e) {
                    var t, n, r = e, o = a(e);
                    if ("array" === o) for (r = [], n = e.length, t = 0; n > t; ++t) r[t] = i.clone(e[t]); else if ("object" === o) {
                        r = {};
                        for (t in e) r[t] = i.clone(e[t]);
                    }
                    return r;
                }, e ? t.exports = i : window[o] = i;
            }("object" == typeof t && t && "object" == typeof t.exports && t.exports);
        }, {} ],
        2: [ function(t, n, r) {
            !function(t, r) {
                // eslint-disable-line
                "use strict";
                /* eslint-disable no-undef */
                var a = r(t);
                "object" == typeof n && null != n && n.exports ? n.exports = a : "function" == typeof e && e.amd ? e(function() {
                    return a;
                }) : t.m = a;
            }("undefined" != typeof window ? window : this, function(e, t) {
                // eslint-disable-line
                "use strict";
                function n(e) {
                    return "function" == typeof e;
                }
                function r(e) {
                    return "[object Object]" === Ce.call(e);
                }
                function a(e) {
                    return "[object String]" === Ce.call(e);
                }
                function i() {}
                // self invoking function needed because of the way mocks work
                function o(e) {
                    Oe = e.document, xe = e.location, Ee = e.cancelAnimationFrame || e.clearTimeout, 
                    Se = e.requestAnimationFrame || e.setTimeout;
                }
                /**
	 * @typedef {String} Tag
	 * A string that looks like -> div.classname#id[param=one][param2=two]
	 * Which describes a DOM node
	 */
                function u(e, t) {
                    for (var n, r = [], a = /(?:(^|#|\.)([^#\.\[\]]+))|(\[.+?\])/g; n = a.exec(t); ) if ("" === n[1] && n[2]) e.tag = n[2]; else if ("#" === n[1]) e.attrs.id = n[2]; else if ("." === n[1]) r.push(n[2]); else if ("[" === n[3][0]) {
                        var i = /\[(.+?)(?:=("|'|)(.*?)\2)?\]/.exec(n[3]);
                        e.attrs[i[1]] = i[3] || "";
                    }
                    return r;
                }
                function l(e, t) {
                    var n = t ? e.slice(1) : e;
                    return 1 === n.length && Ke(n[0]) ? n[0] : n;
                }
                function d(e, t, n) {
                    var r = "class" in t ? "class" : "className";
                    for (var a in t) Me.call(t, a) && (a === r && null != t[a] && "" !== t[a] ? (n.push(t[a]), 
                    // create key in correct iteration order
                    e[a] = "") : e[a] = t[a]);
                    n.length && (e[r] = n.join(" "));
                }
                /**
	 *
	 * @param {Tag} The DOM node tag
	 * @param {Object=[]} optional key-value pairs to be mapped to DOM attrs
	 * @param {...mNode=[]} Zero or more Mithril child nodes. Can be an array,
	 *                      or splat (optional)
	 */
                function s(e, t) {
                    for (var n = [], i = 1, o = arguments.length; o > i; i++) n[i - 1] = arguments[i];
                    if (r(e)) return re(e, n);
                    if (!a(e)) throw new Error("selector in m(selector, attrs, children) should be a string");
                    var s = null != t && r(t) && !("tag" in t || "view" in t || "subtree" in t), f = s ? t : {}, c = {
                        tag: "div",
                        attrs: {},
                        children: l(n, s)
                    };
                    return d(c.attrs, f, u(c, e)), c;
                }
                function f(e, t) {
                    for (var n = 0; n < e.length && !t(e[n], n++); ) ;
                }
                function c(e, t) {
                    f(e, function(e, n) {
                        return (e = e && e.attrs) && null != e.key && t(e, n);
                    });
                }
                // This function was causing deopts in Chrome.
                function p(e) {
                    // data.toString() might throw or return null if data is the return
                    // value of Console.log in some versions of Firefox (behavior depends on
                    // version)
                    try {
                        if (null != e && null != e.toString()) return e;
                    } catch (t) {}
                    return "";
                }
                // This function was causing deopts in Chrome.
                function v(e, t, n, r) {
                    try {
                        g(e, t, n), t.nodeValue = r;
                    } catch (a) {}
                }
                function m(e) {
                    // recursively flatten array
                    for (var t = 0; t < e.length; t++) Ke(e[t]) && (e = e.concat.apply([], e), t--);
                    return e;
                }
                function g(e, t, n) {
                    e.insertBefore(t, e.childNodes[n] || null);
                }
                function h(e, t, n, r) {
                    c(e, function(e, r) {
                        t[e = e.key] = t[e] ? {
                            action: Be,
                            index: r,
                            from: t[e].index,
                            element: n.nodes[t[e].index] || Oe.createElement("div")
                        } : {
                            action: Te,
                            index: r
                        };
                    });
                    var a = [];
                    for (var i in t) Me.call(t, i) && a.push(t[i]);
                    var o = a.sort(U), u = new Array(n.length);
                    return u.nodes = n.nodes.slice(), f(o, function(t) {
                        var a = t.index;
                        if (t.action === Ae && (J(n[a].nodes, n[a]), u.splice(a, 1)), t.action === Te) {
                            var i = Oe.createElement("div");
                            i.key = e[a].attrs.key, g(r, i, a), u.splice(a, 0, {
                                attrs: {
                                    key: e[a].attrs.key
                                },
                                nodes: [ i ]
                            }), u.nodes[a] = i;
                        }
                        if (t.action === Be) {
                            var o = t.element, l = r.childNodes[a];
                            l !== o && null !== o && r.insertBefore(o, l || null), u[a] = n[t.from], u.nodes[a] = o;
                        }
                    }), u;
                }
                function y(e, t, n, r) {
                    var a = e.length !== t.length;
                    return a || c(e, function(e, n) {
                        var r = t[n];
                        return a = r && r.attrs && r.attrs.key !== e.key;
                    }), a ? h(e, n, t, r) : t;
                }
                function w(e, t, n) {
                    // diff the array itself
                    // update the list of DOM nodes by collecting the nodes from each item
                    f(e, function(e, r) {
                        null != t[r] && n.push.apply(n, t[r].nodes);
                    }), // remove items from the end of the array if the new array is shorter
                    // than the old one. if errors ever happen here, the issue is most
                    // likely a bug in the construction of the `cached` data structure
                    // somewhere earlier in the program
                    f(t.nodes, function(e, r) {
                        null != e.parentNode && n.indexOf(e) < 0 && J([ e ], [ t[r] ]);
                    }), e.length < t.length && (t.length = e.length), t.nodes = n;
                }
                function b(e) {
                    var t = 0;
                    c(e, function() {
                        return f(e, function(e) {
                            (e = e && e.attrs) && null == e.key && (e.key = "__mithril__" + t++);
                        }), 1;
                    });
                }
                function P(e, t, n) {
                    return e.tag !== t.tag ? !0 : n.sort().join() !== Object.keys(t.attrs).sort().join() ? !0 : e.attrs.id !== t.attrs.id ? !0 : e.attrs.key !== t.attrs.key ? !0 : "all" === s.redraw.strategy() ? !t.configContext || t.configContext.retain !== !0 : "diff" === s.redraw.strategy() ? t.configContext && t.configContext.retain === !1 : !1;
                }
                function k(e, t, r) {
                    // if an element is different enough from the one in cache, recreate it
                    P(e, t, r) && (t.nodes.length && J(t.nodes), t.configContext && n(t.configContext.onunload) && t.configContext.onunload(), 
                    t.controllers && f(t.controllers, function(e) {
                        e.onunload && e.onunload({
                            preventDefault: i
                        });
                    }));
                }
                function O(e, t) {
                    return e.attrs.xmlns ? e.attrs.xmlns : "svg" === e.tag ? "http://www.w3.org/2000/svg" : "math" === e.tag ? "http://www.w3.org/1998/Math/MathML" : t;
                }
                function x(e, t, n) {
                    n.length && (e.views = t, e.controllers = n, f(n, function(e) {
                        if (e.onunload && e.onunload.$old && (e.onunload = e.onunload.$old), je && e.onunload) {
                            var t = e.onunload;
                            e.onunload = i, e.onunload.$old = t;
                        }
                    }));
                }
                function S(e, t, r, a, i) {
                    // schedule configs to be called. They are called after `build` finishes
                    // running
                    if (n(t.attrs.config)) {
                        var o = i.configContext = i.configContext || {};
                        // bind
                        e.push(function() {
                            return t.attrs.config.call(t, r, !a, o, i);
                        });
                    }
                }
                function E(e, n, r, a, i, o, u, l) {
                    var d = e.nodes[0];
                    return a && $(d, n.tag, n.attrs, e.attrs, i), e.children = H(d, n.tag, t, t, n.children, e.children, !1, 0, n.attrs.contenteditable ? d : r, i, u), 
                    e.nodes.intact = !0, l.length && (e.views = o, e.controllers = l), d;
                }
                function M(e, t, n) {
                    var r;
                    e.$trusted ? r = Z(t, n, e) : (r = [ Oe.createTextNode(e) ], t.nodeName in De || g(t, r[0], n));
                    var a;
                    return a = "string" == typeof e || "number" == typeof e || "boolean" == typeof e ? new e.constructor(e) : e, 
                    a.nodes = r, a;
                }
                function C(e, t, n, r, a, i) {
                    var o = t.nodes;
                    // <textarea> uses `value` instead of `nodeValue`.
                    // contenteditable nodes use `innerHTML` instead of `nodeValue`.
                    // was a trusted string
                    return r && r === Oe.activeElement || (e.$trusted ? (J(o, t), o = Z(n, a, e)) : "textarea" === i ? n.value = e : r ? r.innerHTML = e : ((1 === o[0].nodeType || o.length > 1 || o[0].nodeValue.trim && !o[0].nodeValue.trim()) && (J(t.nodes, t), 
                    o = [ Oe.createTextNode(e) ]), v(n, o[0], a, e))), t = new e.constructor(e), t.nodes = o, 
                    t;
                }
                function K(e, t, n, r, a, i, o) {
                    return e.nodes.length ? e.valueOf() !== t.valueOf() || a ? C(t, e, r, i, n, o) : (e.nodes.intact = !0, 
                    e) : M(t, r, n);
                }
                function D(e) {
                    if (e.$trusted) {
                        // fix offset of next element if item was a trusted string w/ more
                        // than one html element
                        // the first clause in the regexp matches elements
                        // the second clause (after the pipe) matches text nodes
                        var t = e.match(/<[^\/]|\>\s*[^<]/g);
                        if (null != t) return t.length;
                    } else if (Ke(e)) return e.length;
                    return 1;
                }
                function A(e, n, r, a, i, o, u, l, d) {
                    e = m(e);
                    var s = [], f = n.length === e.length, p = 0, v = {}, g = !1;
                    c(n, function(e, t) {
                        g = !0, v[n[t].attrs.key] = {
                            action: Ae,
                            index: t
                        };
                    }), b(e), g && (n = y(e, n, v, r));
                    // faster explicitly written
                    for (var h = 0, P = 0, k = e.length; k > P; P++) {
                        // diff each item in the array
                        var O = H(r, i, n, a, e[P], n[h], o, a + p || p, u, l, d);
                        O !== t && (f = f && O.nodes.intact, p += D(O), n[h++] = O);
                    }
                    return f || w(e, n, s), n;
                }
                function T(e, t, n, r, a) {
                    if (null != t) {
                        if (Ce.call(t) === Ce.call(e)) return t;
                        if (a && a.nodes) {
                            var i = n - r, o = i + (Ke(e) ? e : t.nodes).length;
                            J(a.nodes.slice(i, o), a.slice(i, o));
                        } else t.nodes && J(t.nodes, t);
                    }
                    // if constructor creates a virtual dom element, use a blank object as
                    // the base cached node instead of copying the virtual el (#277)
                    return t = new e.constructor(), t.tag && (t = {}), t.nodes = [], t;
                }
                function B(e, t) {
                    return e.attrs.is ? null == t ? Oe.createElement(e.tag, e.attrs.is) : Oe.createElementNS(t, e.tag, e.attrs.is) : null == t ? Oe.createElement(e.tag) : Oe.createElementNS(t, e.tag);
                }
                function j(e, t, n, r) {
                    return r ? $(t, e.tag, e.attrs, {}, n) : e.attrs;
                }
                function R(e, n, r, a, i, o) {
                    return null != e.children && e.children.length > 0 ? H(n, e.tag, t, t, e.children, r.children, !0, 0, e.attrs.contenteditable ? n : a, i, o) : e.children;
                }
                function L(e, t, n, r, a, i, o) {
                    var u = {
                        tag: e.tag,
                        attrs: t,
                        children: n,
                        nodes: [ r ]
                    };
                    // edge case: setting value on <select> doesn't work before children
                    // exist, so set it again after children have been created
                    return x(u, i, o), u.children && !u.children.nodes && (u.children.nodes = []), "select" === e.tag && "value" in e.attrs && $(r, e.tag, {
                        value: e.attrs.value
                    }, {}, a), u;
                }
                function G(e, t, r, a) {
                    var i;
                    return i = "diff" === s.redraw.strategy() && e ? e.indexOf(t) : -1, i > -1 ? r[i] : n(a) ? new a() : {};
                }
                function F(e, t, n, r) {
                    null != r.onunload && Le.map(function(e) {
                        return e.handler;
                    }).indexOf(r.onunload) < 0 && Le.push({
                        controller: r,
                        handler: r.onunload
                    }), e.push(n), t.push(r);
                }
                function N(e, t, n, r, a, i) {
                    var o = G(n.views, t, r, e.controller), u = e && e.attrs && e.attrs.key;
                    return e = 0 === je || Ge || r && r.indexOf(o) > -1 ? e.view(o) : {
                        tag: "placeholder"
                    }, "retain" === e.subtree ? e : (e.attrs = e.attrs || {}, e.attrs.key = u, F(i, a, t, o), 
                    e);
                }
                function _(e, t, n, r) {
                    for (var a = t && t.controllers; null != e.view; ) e = N(e, e.view.$original || e.view, t, a, r, n);
                    return e;
                }
                function I(// eslint-disable-line max-statements
                e, t, n, r, i, o, u, l) {
                    var d = [], s = [];
                    if (e = _(e, t, d, s), "retain" === e.subtree) return t;
                    if (!e.tag && s.length) throw new Error("Component template must return a virtual element, not an array, string, etc.");
                    e.attrs = e.attrs || {}, t.attrs = t.attrs || {};
                    var f = Object.keys(e.attrs), c = f.length > ("key" in e.attrs ? 1 : 0);
                    if (k(e, t, f), a(e.tag)) {
                        var p = 0 === t.nodes.length;
                        u = O(e, u);
                        var v;
                        if (p) {
                            v = B(e, u);
                            // set attributes first, then create children
                            var m = j(e, v, u, c);
                            // add the node to its parent before attaching children to it
                            g(r, v, i);
                            var h = R(e, v, t, n, u, l);
                            t = L(e, m, h, v, u, d, s);
                        } else v = E(t, e, n, c, u, d, l, s);
                        // The configs are called after `build` finishes running
                        return p || o !== !0 || null == v || g(r, v, i), S(l, e, v, p, t), t;
                    }
                }
                function H(e, t, a, i, o, u, l, d, s, f, c) {
                    /*
		 * `build` is a recursive function that manages creation/diffing/removal
		 * of DOM elements based on comparison between `data` and `cached` the
		 * diff algorithm can be summarized as this:
		 *
		 * 1 - compare `data` and `cached`
		 * 2 - if they are different, copy `data` to `cached` and update the DOM
		 *     based on what the difference is
		 * 3 - recursively apply this algorithm for every array and for the
		 *     children of every virtual element
		 *
		 * The `cached` data structure is essentially the same as the previous
		 * redraw's `data` data structure, with a few additions:
		 * - `cached` always has a property called `nodes`, which is a list of
		 *    DOM elements that correspond to the data represented by the
		 *    respective virtual element
		 * - in order to support attaching `nodes` as a property of `cached`,
		 *    `cached` is *always* a non-primitive object, i.e. if the data was
		 *    a string, then cached is a String instance. If data was `null` or
		 *    `undefined`, cached is `new String("")`
		 * - `cached also has a `configContext` property, which is the state
		 *    storage object exposed by config(element, isInitialized, context)
		 * - when `cached` is an Object, it represents a virtual element; when
		 *    it's an Array, it represents a list of elements; when it's a
		 *    String, Number or Boolean, it represents a text node
		 *
		 * `parentElement` is a DOM element used for W3C DOM API calls
		 * `parentTag` is only used for handling a corner case for textarea
		 * values
		 * `parentCache` is used to remove nodes in some multi-node cases
		 * `parentIndex` and `index` are used to figure out the offset of nodes.
		 * They're artifacts from before arrays started being flattened and are
		 * likely refactorable
		 * `data` and `cached` are, respectively, the new and old nodes being
		 * diffed
		 * `shouldReattach` is a flag indicating whether a parent node was
		 * recreated (if so, and if this node is reused, then this node must
		 * reattach itself to the new parent)
		 * `editable` is a flag that indicates whether an ancestor is
		 * contenteditable
		 * `namespace` indicates the closest HTML namespace as it cascades down
		 * from an ancestor
		 * `configs` is a list of config functions to run after the topmost
		 * `build` call finishes running
		 *
		 * there's logic that relies on the assumption that null and undefined
		 * data are equivalent to empty strings
		 * - this prevents lifecycle surprises from procedural helpers that mix
		 *   implicit and explicit return statements (e.g.
		 *   function foo() {if (cond) return m("div")}
		 * - it simplifies diffing code
		 */
                    return o = p(o), "retain" === o.subtree ? u : (u = T(o, u, d, i, a), Ke(o) ? A(o, u, e, d, t, l, s, f, c) : null != o && r(o) ? I(o, u, s, e, d, l, f, c) : n(o) ? u : K(u, o, d, e, l, s, t));
                }
                function U(e, t) {
                    return e.action - t.action || e.index - t.index;
                }
                function q(e, t, n) {
                    for (var r in t) Me.call(t, r) && (null != n && n[r] === t[r] || (e.style[r] = t[r]));
                    for (r in n) Me.call(n, r) && (Me.call(t, r) || (e.style[r] = ""));
                }
                function X(e, t, a, i, o, u) {
                    if ("config" === t || "key" === t) // `config` isn't a real attribute, so ignore it
                    return !0;
                    if (n(a) && "on" === t.slice(0, 2)) // hook event handlers to the auto-redrawing system
                    e[t] = ee(a, e); else if ("style" === t && null != a && r(a)) // handle `style: {...}`
                    q(e, a, i); else if (null != u) // handle SVG
                    "href" === t ? e.setAttributeNS("http://www.w3.org/1999/xlink", "href", a) : e.setAttribute("className" === t ? "class" : t, a); else if (t in e && !Fe[t]) // handle cases that are properties (but ignore cases where we
                    // should use setAttribute instead)
                    //
                    // - list and form are typically used as strings, but are DOM
                    //   element references in js
                    //
                    // - when using CSS selectors (e.g. `m("[style='']")`), style is
                    //   used as a string, but it's an object in js
                    //
                    // #348 don't set the value if not needed - otherwise, cursor
                    // placement breaks in Chrome
                    try {
                        "input" === o && e[t] === a || (e[t] = a);
                    } catch (l) {
                        e.setAttribute(t, a);
                    } else e.setAttribute(t, a);
                }
                function z(e, t, n, r, a, i, o) {
                    if (t in a && r === n && Oe.activeElement !== e) "value" === t && "input" === i && e.value !== n && (// #348 dataAttr may not be a string, so use loose comparison
                    e.value = n); else {
                        a[t] = n;
                        try {
                            return X(e, t, n, r, i, o);
                        } catch (u) {
                            // swallow IE's invalid argument errors to mimic HTML's
                            // fallback-to-doing-nothing-on-invalid-attributes behavior
                            if (u.message.indexOf("Invalid argument") < 0) throw u;
                        }
                    }
                }
                function $(e, t, n, r, a) {
                    for (var i in n) !Me.call(n, i) || !z(e, i, n[i], r[i], r, t, a);
                    return r;
                }
                function J(e, t) {
                    for (var n = e.length - 1; n > -1; n--) if (e[n] && e[n].parentNode) {
                        try {
                            e[n].parentNode.removeChild(e[n]);
                        } catch (r) {}
                        t = [].concat(t), t[n] && V(t[n]);
                    }
                    // release memory if nodes is an array. This check should fail if nodes
                    // is a NodeList (see loop above)
                    e.length && (e.length = 0);
                }
                function V(e) {
                    e.configContext && n(e.configContext.onunload) && (e.configContext.onunload(), e.configContext.onunload = null), 
                    e.controllers && f(e.controllers, function(e) {
                        n(e.onunload) && e.onunload({
                            preventDefault: i
                        });
                    }), e.children && (Ke(e.children) ? f(e.children, V) : e.children.tag && V(e.children));
                }
                function Y(e, t) {
                    try {
                        e.appendChild(Oe.createRange().createContextualFragment(t));
                    } catch (n) {
                        e.insertAdjacentHTML("beforeend", t), Q(e);
                    }
                }
                // Replace script tags inside given DOM element with executable ones.
                // Will also check children recursively and replace any found script
                // tags in same manner.
                function Q(e) {
                    if ("SCRIPT" === e.tagName) e.parentNode.replaceChild(W(e), e); else {
                        var t = e.childNodes;
                        if (t && t.length) for (var n = 0; n < t.length; n++) Q(t[n]);
                    }
                    return e;
                }
                // Replace script element with one whose contents are executable.
                function W(e) {
                    for (var t = document.createElement("script"), n = e.attributes, r = 0; r < n.length; r++) t.setAttribute(n[r].name, n[r].value);
                    return t.text = e.innerHTML, t;
                }
                function Z(e, t, n) {
                    var r = e.childNodes[t];
                    if (r) {
                        var a = 1 !== r.nodeType, i = Oe.createElement("span");
                        a ? (e.insertBefore(i, r || null), i.insertAdjacentHTML("beforebegin", n), e.removeChild(i)) : r.insertAdjacentHTML("beforebegin", n);
                    } else Y(e, n);
                    for (var o = []; e.childNodes[t] !== r; ) o.push(e.childNodes[t]), t++;
                    return o;
                }
                function ee(e, t) {
                    return function(n) {
                        n = n || event, s.redraw.strategy("diff"), s.startComputation();
                        try {
                            return e.call(t, n);
                        } finally {
                            ue();
                        }
                    };
                }
                function te(e) {
                    var t = _e.indexOf(e);
                    return 0 > t ? _e.push(e) - 1 : t;
                }
                function ne(e) {
                    function t() {
                        return arguments.length && (e = arguments[0]), e;
                    }
                    return t.toJSON = function() {
                        return e;
                    }, t;
                }
                // 60 frames per second = 1 call per 16 ms
                function re(e, t) {
                    function n() {
                        /* eslint-disable no-invalid-this */
                        return (e.controller || i).apply(this, t) || this;
                    }
                    function r(n) {
                        for (var r = [ n ].concat(t), a = 1; a < arguments.length; a++) r.push(arguments[a]);
                        return e.view.apply(e, r);
                    }
                    e.controller && (n.prototype = e.controller.prototype), r.$original = e.view;
                    var a = {
                        controller: n,
                        view: r
                    };
                    return t[0] && null != t[0].key && (a.attrs = {
                        key: t[0].key
                    }), a;
                }
                function ae(e, t, n, r) {
                    if (!r) {
                        s.redraw.strategy("all"), s.startComputation(), Ue[n] = t;
                        var a;
                        a = He = e ? e : e = {
                            controller: i
                        };
                        var o = new (e.controller || i)();
                        // controllers may call m.mount recursively (via m.route redirects,
                        // for example)
                        // this conditional ensures only the last recursive m.mount call is
                        // applied
                        return a === He && (Xe[n] = o, qe[n] = e), ue(), null === e && ie(t, n), Xe[n];
                    }
                    null == e && ie(t, n);
                }
                function ie(e, t) {
                    Ue.splice(t, 1), Xe.splice(t, 1), qe.splice(t, 1), ve(e), _e.splice(te(e), 1);
                }
                function oe() {
                    Je && (Je(), Je = null), f(Ue, function(e, t) {
                        var n = qe[t];
                        if (Xe[t]) {
                            var r = [ Xe[t] ];
                            s.render(e, n.view ? n.view(Xe[t], r) : "");
                        }
                    }), // after rendering within a routed context, we need to scroll back to
                    // the top, and fetch the document title for history.pushState
                    Ve && (Ve(), Ve = null), ze = null, $e = new Date(), s.redraw.strategy("diff");
                }
                function ue() {
                    "none" === s.redraw.strategy() ? (je--, s.redraw.strategy("diff")) : s.endComputation();
                }
                function le(e) {
                    return e.slice(et[s.route.mode].length);
                }
                function de(e, t, n) {
                    We = {};
                    var r = n.indexOf("?");
                    -1 !== r && (We = pe(n.substr(r + 1, n.length)), n = n.substr(0, r));
                    // Get all routes and check if there's
                    // an exact match for the current path
                    var a = Object.keys(t), i = a.indexOf(n);
                    if (-1 !== i) return s.mount(e, t[a[i]]), !0;
                    for (var o in t) if (Me.call(t, o)) {
                        if (o === n) return s.mount(e, t[o]), !0;
                        var u = new RegExp("^" + o.replace(/:[^\/]+?\.{3}/g, "(.*?)").replace(/:[^\/]+/g, "([^\\/]+)") + "/?$");
                        if (u.test(n)) /* eslint-enable no-loop-func */
                        /* eslint-disable no-loop-func */
                        return n.replace(u, function() {
                            var n = o.match(/:[^\/]+/g) || [], r = [].slice.call(arguments, 1, -2);
                            f(n, function(e, t) {
                                We[e.replace(/:|\./g, "")] = decodeURIComponent(r[t]);
                            }), s.mount(e, t[o]);
                        }), !0;
                    }
                }
                function se(e) {
                    if (e = e || event, !(e.ctrlKey || e.metaKey || e.shiftKey || 2 === e.which)) {
                        e.preventDefault ? e.preventDefault() : e.returnValue = !1;
                        var t, n = e.currentTarget || e.srcElement;
                        for (t = "pathname" === s.route.mode && n.search ? pe(n.search.slice(1)) : {}; n && !/a/i.test(n.nodeName); ) n = n.parentNode;
                        // clear pendingRequests because we want an immediate route change
                        je = 0, s.route(n[s.route.mode].slice(et[s.route.mode].length), t);
                    }
                }
                function fe() {
                    "hash" !== s.route.mode && xe.hash ? xe.hash = xe.hash : e.scrollTo(0, 0);
                }
                function ce(e, n) {
                    var a = {}, i = [];
                    for (var o in e) if (Me.call(e, o)) {
                        var u = n ? n + "[" + o + "]" : o, l = e[o];
                        if (null === l) i.push(encodeURIComponent(u)); else if (r(l)) i.push(ce(l, u)); else if (Ke(l)) {
                            var d = [];
                            a[u] = a[u] || {}, /* eslint-disable no-loop-func */
                            f(l, function(e) {
                                /* eslint-enable no-loop-func */
                                a[u][e] || (a[u][e] = !0, d.push(encodeURIComponent(u) + "=" + encodeURIComponent(e)));
                            }), i.push(d.join("&"));
                        } else l !== t && i.push(encodeURIComponent(u) + "=" + encodeURIComponent(l));
                    }
                    return i.join("&");
                }
                function pe(e) {
                    if ("" === e || null == e) return {};
                    "?" === e.charAt(0) && (e = e.slice(1));
                    var t = e.split("&"), n = {};
                    return f(t, function(e) {
                        var t = e.split("="), r = decodeURIComponent(t[0]), a = 2 === t.length ? decodeURIComponent(t[1]) : null;
                        null != n[r] ? (Ke(n[r]) || (n[r] = [ n[r] ]), n[r].push(a)) : n[r] = a;
                    }), n;
                }
                function ve(e) {
                    var n = te(e);
                    J(e.childNodes, Ie[n]), Ie[n] = t;
                }
                function me(e, t) {
                    var n = s.prop(t);
                    return e.then(n), n.then = function(n, r) {
                        return me(e.then(n, r), t);
                    }, n["catch"] = n.then.bind(null, null), n;
                }
                function ge(e, t) {
                    function a(e) {
                        l = e || ot, f.map(function(e) {
                            l === it ? e.resolve(d) : e.reject(d);
                        });
                    }
                    function i(e, t, a, i) {
                        if ((null != d && r(d) || n(d)) && n(e)) try {
                            // count protects against abuse calls from spec checker
                            var o = 0;
                            e.call(d, function(e) {
                                o++ || (d = e, t());
                            }, function(e) {
                                o++ || (d = e, a());
                            });
                        } catch (u) {
                            s.deferred.onerror(u), d = u, a();
                        } else i();
                    }
                    function o() {
                        // check if it's a thenable
                        var r;
                        try {
                            r = d && d.then;
                        } catch (f) {
                            return s.deferred.onerror(f), d = f, l = at, o();
                        }
                        l === at && s.deferred.onerror(d), i(r, function() {
                            l = rt, o();
                        }, function() {
                            l = at, o();
                        }, function() {
                            try {
                                l === rt && n(e) ? d = e(d) : l === at && n(t) && (d = t(d), l = rt);
                            } catch (o) {
                                return s.deferred.onerror(o), d = o, a();
                            }
                            d === u ? (d = TypeError(), a()) : i(r, function() {
                                a(it);
                            }, a, function() {
                                a(l === rt && it);
                            });
                        });
                    }
                    var u = this, l = 0, d = 0, f = [];
                    u.promise = {}, u.resolve = function(e) {
                        return l || (d = e, l = rt, o()), u;
                    }, u.reject = function(e) {
                        return l || (d = e, l = at, o()), u;
                    }, u.promise.then = function(e, t) {
                        var n = new ge(e, t);
                        return l === it ? n.resolve(d) : l === ot ? n.reject(d) : f.push(n), n.promise;
                    };
                }
                function he(e) {
                    return e;
                }
                function ye(n) {
                    var r = n.callbackName || "mithril_callback_" + new Date().getTime() + "_" + Math.round(1e16 * Math.random()).toString(36), a = Oe.createElement("script");
                    e[r] = function(i) {
                        a.parentNode.removeChild(a), n.onload({
                            type: "load",
                            target: {
                                responseText: i
                            }
                        }), e[r] = t;
                    }, a.onerror = function() {
                        return a.parentNode.removeChild(a), n.onerror({
                            type: "error",
                            target: {
                                status: 500,
                                responseText: JSON.stringify({
                                    error: "Error making jsonp request"
                                })
                            }
                        }), e[r] = t, !1;
                    }, a.onload = function() {
                        return !1;
                    }, a.src = n.url + (n.url.indexOf("?") > 0 ? "&" : "?") + (n.callbackKey ? n.callbackKey : "callback") + "=" + r + "&" + ce(n.data || {}), 
                    Oe.body.appendChild(a);
                }
                function we(t) {
                    var r = new e.XMLHttpRequest();
                    if (r.open(t.method, t.url, !0, t.user, t.password), r.onreadystatechange = function() {
                        4 === r.readyState && (r.status >= 200 && r.status < 300 ? t.onload({
                            type: "load",
                            target: r
                        }) : t.onerror({
                            type: "error",
                            target: r
                        }));
                    }, t.serialize === JSON.stringify && t.data && "GET" !== t.method && r.setRequestHeader("Content-Type", "application/json; charset=utf-8"), 
                    t.deserialize === JSON.parse && r.setRequestHeader("Accept", "application/json, text/*"), 
                    n(t.config)) {
                        var i = t.config(r, t);
                        null != i && (r = i);
                    }
                    var o = "GET" !== t.method && t.data ? t.data : "";
                    if (o && !a(o) && o.constructor !== e.FormData) throw new Error("Request data should be either be a string or FormData. Check the `serialize` option in `m.request`");
                    return r.send(o), r;
                }
                function be(e) {
                    return e.dataType && "jsonp" === e.dataType.toLowerCase() ? ye(e) : we(e);
                }
                function Pe(e, t, n) {
                    if ("GET" === e.method && "jsonp" !== e.dataType) {
                        var r = e.url.indexOf("?") < 0 ? "?" : "&", a = ce(t);
                        e.url += a ? r + a : "";
                    } else e.data = n(t);
                }
                function ke(e, t) {
                    return t && (e = e.replace(/:[a-z]\w+/gi, function(e) {
                        var n = e.slice(1), r = t[n] || e;
                        return delete t[n], r;
                    })), e;
                }
                s.version = function() {
                    return "v0.2.5";
                };
                var Oe, xe, Se, Ee, Me = {}.hasOwnProperty, Ce = {}.toString, Ke = Array.isArray || function(e) {
                    return "[object Array]" === Ce.call(e);
                }, De = {
                    AREA: 1,
                    BASE: 1,
                    BR: 1,
                    COL: 1,
                    COMMAND: 1,
                    EMBED: 1,
                    HR: 1,
                    IMG: 1,
                    INPUT: 1,
                    KEYGEN: 1,
                    LINK: 1,
                    META: 1,
                    PARAM: 1,
                    SOURCE: 1,
                    TRACK: 1,
                    WBR: 1
                };
                // testing API
                s.deps = function(t) {
                    return o(e = t || window), e;
                }, s.deps(e);
                var Ae = 1, Te = 2, Be = 3, je = 0;
                s.startComputation = function() {
                    je++;
                }, s.endComputation = function() {
                    je > 1 ? je-- : (je = 0, s.redraw());
                };
                var Re, Le = [], Ge = !1, Fe = {
                    list: 1,
                    style: 1,
                    form: 1,
                    type: 1,
                    width: 1,
                    height: 1
                }, Ne = {
                    appendChild: function(e) {
                        Re === t && (Re = Oe.createElement("html")), Oe.documentElement && Oe.documentElement !== e ? Oe.replaceChild(e, Oe.documentElement) : Oe.appendChild(e), 
                        this.childNodes = Oe.childNodes;
                    },
                    insertBefore: function(e) {
                        this.appendChild(e);
                    },
                    childNodes: []
                }, _e = [], Ie = {};
                s.render = function(e, n, r) {
                    if (!e) throw new Error("Ensure the DOM element being passed to m.route/m.mount/m.render is not undefined.");
                    var a, i = [], o = te(e), u = e === Oe;
                    a = u || e === Oe.documentElement ? Ne : e, u && "html" !== n.tag && (n = {
                        tag: "html",
                        attrs: {},
                        children: n
                    }), Ie[o] === t && J(a.childNodes), r === !0 && ve(e), Ie[o] = H(a, null, t, t, n, Ie[o], !1, 0, null, t, i), 
                    f(i, function(e) {
                        e();
                    });
                }, s.trust = function(e) {
                    // eslint-disable-line no-new-wrappers
                    return e = new String(e), e.$trusted = !0, e;
                }, s.prop = function(e) {
                    return (null != e && (r(e) || n(e)) || "undefined" != typeof Promise && e instanceof Promise) && n(e.then) ? me(e) : ne(e);
                };
                var He, Ue = [], qe = [], Xe = [], ze = null, $e = 0, Je = null, Ve = null, Ye = 16;
                s.component = function(e) {
                    for (var t = new Array(arguments.length - 1), n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
                    return re(e, t);
                }, s.mount = s.module = function(e, t) {
                    if (!e) throw new Error("Please ensure the DOM element exists before rendering a template into it.");
                    var r = Ue.indexOf(e);
                    0 > r && (r = Ue.length);
                    var a = !1, i = {
                        preventDefault: function() {
                            a = !0, Je = Ve = null;
                        }
                    };
                    return f(Le, function(e) {
                        e.handler.call(e.controller, i), e.controller.onunload = null;
                    }), a ? f(Le, function(e) {
                        e.controller.onunload = e.handler;
                    }) : Le = [], Xe[r] && n(Xe[r].onunload) && Xe[r].onunload(i), ae(t, e, r, a);
                };
                var Qe = !1;
                s.redraw = function(t) {
                    if (!Qe) {
                        Qe = !0, t && (Ge = !0);
                        try {
                            // lastRedrawId is a positive number if a second redraw is requested
                            // before the next animation frame
                            // lastRedrawId is null if it's the first redraw and not an event
                            // handler
                            ze && !t ? // when setTimeout: only reschedule redraw if time between now
                            // and previous redraw is bigger than a frame, otherwise keep
                            // currently scheduled timeout
                            // when rAF: always reschedule redraw
                            (Se === e.requestAnimationFrame || new Date() - $e > Ye) && (ze > 0 && Ee(ze), ze = Se(oe, Ye)) : (oe(), 
                            ze = Se(function() {
                                ze = null;
                            }, Ye));
                        } finally {
                            Qe = Ge = !1;
                        }
                    }
                }, s.redraw.strategy = s.prop(), s.withAttr = function(e, t, n) {
                    return function(r) {
                        r = r || window.event;
                        /* eslint-disable no-invalid-this */
                        var a = r.currentTarget || this, i = n || this, o = e in a ? a[e] : a.getAttribute(e);
                        t.call(i, o);
                    };
                };
                // routing
                var We, Ze, et = {
                    pathname: "",
                    hash: "#",
                    search: "?"
                }, tt = i, nt = !1;
                s.route = function(t, n, r, i) {
                    // eslint-disable-line
                    // m.route()
                    if (0 === arguments.length) return Ze;
                    // m.route(el, defaultRoute, routes)
                    if (3 === arguments.length && a(n)) {
                        tt = function(e) {
                            var a = Ze = le(e);
                            if (!de(t, r, a)) {
                                if (nt) throw new Error("Ensure the default route matches one of the routes defined in m.route");
                                nt = !0, s.route(n, !0), nt = !1;
                            }
                        };
                        var o = "hash" === s.route.mode ? "onhashchange" : "onpopstate";
                        return e[o] = function() {
                            var e = xe[s.route.mode];
                            "pathname" === s.route.mode && (e += xe.search), Ze !== le(e) && tt(e);
                        }, Je = fe, void e[o]();
                    }
                    // config: m.route
                    if (t.addEventListener || t.attachEvent) {
                        var u = "pathname" !== s.route.mode ? xe.pathname : "";
                        return t.href = u + et[s.route.mode] + i.attrs.href, void (t.addEventListener ? (t.removeEventListener("click", se), 
                        t.addEventListener("click", se)) : (t.detachEvent("onclick", se), t.attachEvent("onclick", se)));
                    }
                    // m.route(route, params, shouldReplaceHistoryEntry)
                    if (a(t)) {
                        var l = Ze;
                        Ze = t;
                        var d, f = n || {}, c = Ze.indexOf("?");
                        d = c > -1 ? pe(Ze.slice(c + 1)) : {};
                        for (var p in f) Me.call(f, p) && (d[p] = f[p]);
                        var v, m = ce(d);
                        v = c > -1 ? Ze.slice(0, c) : Ze, m && (Ze = v + (-1 === v.indexOf("?") ? "?" : "&") + m);
                        var g = (3 === arguments.length ? r : n) === !0 || l === t;
                        if (e.history.pushState) {
                            var h = g ? "replaceState" : "pushState";
                            Je = fe, Ve = function() {
                                try {
                                    e.history[h](null, Oe.title, et[s.route.mode] + Ze);
                                } catch (t) {
                                    // In the event of a pushState or replaceState failure,
                                    // fallback to a standard redirect. This is specifically
                                    // to address a Safari security error when attempting to
                                    // call pushState more than 100 times.
                                    xe[s.route.mode] = Ze;
                                }
                            }, tt(et[s.route.mode] + Ze);
                        } else xe[s.route.mode] = Ze, tt(et[s.route.mode] + Ze);
                    }
                }, s.route.param = function(e) {
                    if (!We) throw new Error("You must call m.route(element, defaultRoute, routes) before calling m.route.param()");
                    return e ? We[e] : We;
                }, s.route.mode = "search", s.route.buildQueryString = ce, s.route.parseQueryString = pe, 
                s.deferred = function() {
                    var e = new ge();
                    return e.promise = me(e.promise), e;
                };
                // Promiz.mithril.js | Zolmeister | MIT
                // a modified version of Promiz.js, which does not conform to Promises/A+
                // for two reasons:
                //
                // 1) `then` callbacks are called synchronously (because setTimeout is too
                //    slow, and the setImmediate polyfill is too big
                //
                // 2) throwing subclasses of Error cause the error to be bubbled up instead
                //    of triggering rejection (because the spec does not account for the
                //    important use case of default browser error handling, i.e. message w/
                //    line number)
                var rt = 1, at = 2, it = 3, ot = 4;
                return s.deferred.onerror = function(e) {
                    if ("[object Error]" === Ce.call(e) && !/ Error/.test(e.constructor.toString())) throw je = 0, 
                    e;
                }, s.sync = function(e) {
                    function t(e, t) {
                        return function(o) {
                            return a[e] = o, t || (i = "reject"), 0 === --r && (n.promise(a), n[i](a)), o;
                        };
                    }
                    var n = s.deferred(), r = e.length, a = [], i = "resolve";
                    return e.length > 0 ? f(e, function(e, n) {
                        e.then(t(n, !0), t(n, !1));
                    }) : n.resolve([]), n.promise;
                }, s.request = function(e) {
                    e.background !== !0 && s.startComputation();
                    var t, n, r, a = new ge(), i = e.dataType && "jsonp" === e.dataType.toLowerCase();
                    return i ? (t = e.serialize = n = e.deserialize = he, r = function(e) {
                        return e.responseText;
                    }) : (t = e.serialize = e.serialize || JSON.stringify, n = e.deserialize = e.deserialize || JSON.parse, 
                    r = e.extract || function(e) {
                        return e.responseText.length || n !== JSON.parse ? e.responseText : null;
                    }), e.method = (e.method || "GET").toUpperCase(), e.url = ke(e.url, e.data), Pe(e, e.data, t), 
                    e.onload = e.onerror = function(t) {
                        try {
                            t = t || event;
                            var i = n(r(t.target, e));
                            "load" === t.type ? (e.unwrapSuccess && (i = e.unwrapSuccess(i, t.target)), Ke(i) && e.type ? f(i, function(t, n) {
                                i[n] = new e.type(t);
                            }) : e.type && (i = new e.type(i)), a.resolve(i)) : (e.unwrapError && (i = e.unwrapError(i, t.target)), 
                            a.reject(i));
                        } catch (o) {
                            a.reject(o), s.deferred.onerror(o);
                        } finally {
                            e.background !== !0 && s.endComputation();
                        }
                    }, be(e), a.promise = me(a.promise, e.initialValue), a.promise;
                }, s;
            });
        }, {} ],
        3: [ function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                };
            }
            function a(e, t) {
                var n = .7 * e.width, r = .7 * e.height, a = v["default"].miniKey2pos(t), i = [ a[0] * (n / v["default"].miniColumns), a[1] * (r / v["default"].miniRows) ];
                return i;
            }
            function i(e, t, n) {
                var r = v["default"].key2pos(n), a = [ r[0] * (e.width / v["default"].columns), r[1] * e.height * .5 ], i = [ e.left - t.left, e.top - t.top ];
                return [ i[0] + a[0], i[1] + a[1] ];
            }
            function o(e, t) {
                return [ e[0] - t[0], e[1] - t[1] ];
            }
            function u(e, t) {
                return t[0];
            }
            function l(e, t, n) {
                return {
                    key: e,
                    distance: n,
                    color: t.color,
                    number: t.number
                };
            }
            function d(e, t) {
                var n, r, d, s, f = t.animation.current, c = v["default"].findPov(t.povSide, t.turnSide), p = v["default"].vectorByPov(c), m = (t.bounds(), 
                t.topBounds()), h = t.boardBounds(), y = h.width, w = (h.height, m.width), b = m.height, // aspectRatio = 4/3,
                // boardWidth = bounds.width * 1,
                // boardHeight = bounds.height * (aspectRatio / (38 * 16 / 50 * 2)),
                // topRatio = (38 * 16) / (50 * 7),
                // topWidth = boardWidth,
                // topHeight = bounds.height * (aspectRatio / topRatio),
                P = .0625 * w, k = .14 * b, O = .0625 * y, x = {}, S = [], E = {}, M = {}, C = v["default"].discardByPov(c), K = v["default"].drawByPov(c), D = v["default"].topKey2pos(K), A = v["default"].topKey2pos(C), T = [ w * p[0], b * p[1] + ("up" === c ? -k : "left" === c ? -k / 2 : 0) ], B = [ 12 * P, b - k ], j = [ P * A[0], k * A[1] ], R = [ P * D[0], k * D[1] ], L = [ 1 * P, 1 * k ], G = [], F = [], N = [], _ = [];
                for (n = 0; n < v["default"].allAllowedBoardKeys.length; n++) {
                    r = v["default"].allAllowedBoardKeys[n], d = t.pieces[r], s = e.pieces[r];
                    var I = i(h, m, r);
                    !d && s ? G.push(l(r, s, I)) : d && !s && F.push(l(r, d, I));
                }
                for (n = 0; n < v["default"].miniAllKeys.length; n++) {
                    r = v["default"].miniAllKeys[n], d = t.opens.layout ? t.opens.layout.layout[r] : null, 
                    s = e.opens.layout ? e.opens.layout.layout[r] : null;
                    var H = a(m, r);
                    d && !s ? _.push(l(r, d, H)) : !d && s && N.push(l(r, s, H));
                }
                var U, q, X;
                return "down" !== c || t.spectator ? f.hint === g["default"].drawMiddle ? (U = [ 12 * P, b ], 
                q = T, X = [ q[0] - U[0], q[1] - U[1] ], x[v["default"].middleCount] = [ X, X, !0 ]) : f.hint === g["default"].discard ? (U = [ P * A[0], k * A[1] ], 
                q = T, X = [ q[0] - U[0], q[1] - U[1] ], x[C] = [ X, X ]) : f.hint === g["default"].drawLeft ? (U = [ P * D[0], k * D[1] ], 
                q = T, X = [ q[0] - U[0], q[1] - U[1] ], x[g["default"].drawLeft + K] = [ X, X, !0 ], 
                M.piece = e.discards[K]) : f.hint === g["default"].leaveTaken ? (U = [ P * D[0], k * D[1] ], 
                q = T, X = [ q[0] - U[0], q[1] - U[1] ], x[K] = [ X, X ]) : f.hint === g["default"].openSeries ? _.forEach(function(e, t) {
                    q = T, q = o(q, L), q = o(q, e.distance), U = [ 0, 0 ], X = [ q[0] - U[0], q[1] - U[1] ], 
                    x[e.key] = [ X, X ], E[e.key] = [ 1.75, 1.75 ];
                }) : f.hint === g["default"].collectOpen && N.forEach(function(e, t) {
                    q = T, q = o(q, L), q = o(q, e.distance), U = [ 0, 0 ], X = [ q[0] - U[0], q[1] - U[1] ], 
                    x[e.key] = [ X, X, !0 ], M[e.key] = e;
                }) : f.hint === g["default"].drawMiddle && F[0] ? (r = F[0].key, U = F[0].distance, 
                U = o(U, B), q = [ 0, 0 ], X = [ q[0] - U[0], q[1] - U[1] ], x[r] = [ X, X ]) : f.hint === g["default"].discard && G[0] ? (q = G[0].distance, 
                q = o(q, j), U = [ 0, 0 ], X = [ q[0] - U[0], q[1] - U[1] ], x[C] = [ X, X ]) : f.hint === g["default"].leaveTaken ? G[0] ? (q = G[0].distance, 
                q = o(q, R), U = [ 0, 0 ], X = [ q[0] - U[0], q[1] - U[1] ], x[K] = [ X, X ]) : (U = [ P * D[0], k * D[1] ], 
                q = T, X = [ q[0] - U[0], q[1] - U[1] ], x[K] = [ X, X ]) : f.hint === g["default"].openSeries && _.forEach(function(e, t) {
                    var n = u(e, G.filter(v["default"].partial(v["default"].pieceEqual, e)));
                    G.splice(G.indexOf(n), 1), n && (q = n.distance, q = o(n.distance, [ O, 0 ]), q = o(q, L), 
                    q = o(q, e.distance), U = [ 0, 0 ], X = [ q[0] - U[0], q[1] - U[1] ], x[e.key] = [ X, X ], 
                    E[e.key] = [ 1.75, 1.75 ]);
                }), {
                    anims: x,
                    fadings: S,
                    scales: E,
                    extra: M
                };
            }
            function s(e, t) {
                return Math.round(e * t) / t;
            }
            function f(e) {
                if (e.animation.current.start) {
                    // animation was cancelled
                    var t = 1 - (new Date().getTime() - e.animation.current.start) / e.animation.current.duration;
                    if (0 >= t) e.animation.current = {}, e.render(); else {
                        var n, r = h.easeInOutCubic(t);
                        for (var a in e.animation.current.anims) n = e.animation.current.anims[a], n[1] = [ s(n[0][0] * r, 10), s(n[0][1] * r, 10) ], 
                        n[2] && (n[1] = [ n[0][0] - n[1][0], n[0][1] - n[1][1] ]);
                        var i;
                        for (i in e.animation.current.fadings) e.animations.current.fadings[i].opacity = s(r, 100);
                        for (i in e.animation.current.scales) n = e.animation.current.scales[i], n[0] = 1 + s(.7 * r, 10), 
                        n[1] = 1 + s(.7 * r, 10);
                        e.render(), v["default"].requestAnimationFrame(function() {
                            f(e);
                        });
                    }
                }
            }
            function c(e, t) {
                // clone data
                var n, r = {
                    pieces: {},
                    opens: {},
                    middles: {},
                    discards: {}
                };
                // clone pieces
                for (n in t.pieces) t.pieces[n] && (r.pieces[n] = {
                    color: t.pieces[n].color,
                    number: t.pieces[n].number
                });
                // clone discards
                for (n in t.discards) t.discards[n] && t.discards[n][0] && (r.discards[n] = {
                    color: t.discards[n][0].color,
                    number: t.discards[n][0].number
                });
                if (t.opens.layout) {
                    var a;
                    r.opens.layout = {
                        layout: {}
                    };
                    for (n in t.opens.layout.layout) a = t.opens.layout.layout[n], r.opens.layout.layout[n] = {
                        color: a.color,
                        number: a.number
                    };
                }
                var i = e(), o = d(r, t);
                if (Object.keys(o.anims).length > 0 || o.fadings.length > 0) {
                    var u = t.animation.current.start;
                    t.animation.current = {
                        start: new Date().getTime(),
                        duration: t.animation.duration,
                        anims: o.anims,
                        fadings: o.fadings,
                        scales: o.scales,
                        extra: o.extra
                    }, u || f(t);
                } else // don't animate, just render right away
                t.renderRAF();
                return i;
            }
            var p = e("./util"), v = r(p), m = e("./move"), g = r(m), h = {
                easeInOutCubic: function(e) {
                    return .5 > e ? 4 * e * e * e : (e - 1) * (2 * e - 2) * (2 * e - 2) + 1;
                }
            };
            // transformation is a function
            // accepts board data and any number of arguments,
            // and mutates the board.
            t.exports = function(e, t) {
                return function() {
                    var n = [ t ].concat(Array.prototype.slice.call(arguments, 0));
                    if (t.animation.enabled) return c(v["default"].partialApply(e, n), t);
                    var r = e.apply(null, n);
                    return t.renderRAF(), r;
                };
            };
        }, {
            "./move": 12,
            "./util": 16
        } ],
        4: [ function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                };
            }
            var a = e("./board"), i = r(a);
            t.exports = function(e) {
                return {
                    set: e.set,
                    getPieceGroups: function() {
                        return i["default"].getPieceGroups(e.data);
                    },
                    apiMove: e.apiMove,
                    apiDrawMiddleEnd: e.apiDrawMiddleEnd,
                    playOpenSeries: e.playOpenSeries,
                    playOpenPairs: e.playOpenPairs,
                    playLeaveTaken: e.playLeaveTaken,
                    stop: e.stop,
                    getPieceGroupSeries: e.getPieceGroupSeries,
                    getPieceGroupPairs: e.getPieceGroupPairs,
                    getFen: e.getFen
                };
            };
        }, {
            "./board": 5
        } ],
        5: [ function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                };
            }
            function a(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e;
            }
            function i(e) {
                if (j(e)) {
                    var t = e.middles[ee["default"].gosterge], n = Y(e);
                    if (n = n.filter(function(n) {
                        return oe["default"].series(n.map(function(t) {
                            return e.pieces[t];
                        }), t);
                    }), n.length > 0) {
                        var r = z(n.map(function(t) {
                            return t.map(function(t) {
                                return e.pieces[t];
                            });
                        }));
                        return f(e, n), le(ee["default"].partial(e.movable.events.after, ne["default"].openSeries, ue(r))), 
                        e.animation.current.hint = ne["default"].openSeries, !0;
                    }
                }
                return !1;
            }
            function o(e) {
                if (R(e)) {
                    var t = e.middles[ee["default"].gosterge], n = Y(e);
                    if (n = n.filter(function(n) {
                        return oe["default"].pairs(n.map(function(t) {
                            return e.pieces[t];
                        }), t);
                    }), n.length > 0) {
                        var r = z(n.map(function(t) {
                            return t.map(function(t) {
                                return e.pieces[t];
                            });
                        }));
                        return s(e, n), le(ee["default"].partial(e.movable.events.after, ne["default"].openPairs, ue(r))), 
                        e.animation.current.hint = ne["default"].openSeries, !0;
                    }
                }
                return !1;
            }
            function u(e, t) {
                return t = ae["default"].readPiece(t).piece, L(e) && w(e, t) ? (le(ee["default"].partial(e.movable.events.after, ne["default"].leaveTaken)), 
                e.animation.current.hint = ne["default"].leaveTaken, !0) : !1;
            }
            function l(e, t) {
                var n = ee["default"].middleCount;
                m(e, n), d(e, t);
            }
            function d(e, t) {
                "string" == typeof t && (t = ae["default"].readPiece(t).piece), e.middleHolder.piece = t, 
                c(e);
            }
            function s(e, t) {
                var n = t.map(function(t) {
                    return t.map(function(t) {
                        return e.pieces[t];
                    });
                }), r = z(n);
                le(ee["default"].partial(e.events.move, ne["default"].openPairs, ue(r))), t.forEach(function(t) {
                    return t.map(function(t) {
                        return delete e.pieces[t];
                    });
                });
                var a = e.opens.pairs.concat(n);
                e.opens.pairs = a, e.opens.relayout(e);
            }
            function f(e, t) {
                var n = t.map(function(t) {
                    return t.map(function(t) {
                        return e.pieces[t];
                    });
                }), r = z(n);
                le(ee["default"].partial(e.events.move, ne["default"].openSeries, ue(r))), t.forEach(function(t) {
                    return t.map(function(t) {
                        return delete e.pieces[t];
                    });
                });
                var a = e.opens.series.concat(n);
                e.opens.series = a, e.opens.relayout(e);
            }
            function c(e) {
                var t = e.middleHolder.key, n = e.middleHolder.piece;
                t && n && (e.pieces[t] = n, e.lastMove = [ ee["default"].middleCount ], e.middleHolder.current = !1, 
                e.middleHolder.key = null, e.middleHolder.piece = null);
            }
            function p(e, t, n) {
                var r = I(e, t);
                if (r.length > 0) {
                    var a = r[0].map(function(t, a) {
                        // calculate dest
                        var i = r[0].length - a - 1, o = ee["default"].decBoardKey(n, 2 * i);
                        return [ t, o, e.pieces[t] ];
                    }), i = a.every(function(t) {
                        var n = W(t, 3), r = (n[0], n[1]);
                        n[2];
                        return ee["default"].isAllAllowedBoardKey(r) && [ r, ee["default"].decBoardKey(r, -1) ].every(function(t) {
                            return !e.pieces[t] || a.filter(function(e) {
                                var n = W(e, 3), r = n[0];
                                n[1], n[2];
                                return r === t;
                            }).length > 0;
                        });
                    });
                    return i ? (a.map(function(t) {
                        var n = W(t, 3), r = n[0], a = n[1], i = n[2];
                        return delete e.pieces[r], [ r, a, i ];
                    }).map(function(t) {
                        var n = W(t, 3), r = (n[0], n[1]), a = n[2];
                        e.pieces[r] = a;
                    }), !0) : !1;
                }
                return !1;
            }
            function v(e, t, n) {
                if (t === n || !e.pieces[t]) return !1;
                var r = e.pieces[n];
                return e.pieces[n] = e.pieces[t], e.pieces[t] = r, !0;
            }
            function m(e, t) {
                e.middles[ee["default"].middleCount]--, e.middleHolder.current = !0;
                var n = H(e);
                return e.middleHolder.key = n, !0;
            }
            function g(e, t, n) {
                if (!n || e.pieces[n]) {
                    var r = H(e);
                    n = r;
                }
                return le(ee["default"].partial(e.events.move, ne["default"].drawMiddleEnd)), e.middleHolder.key = n, 
                c(e), !0;
            }
            function h(e, t) {
                return le(ee["default"].partial(e.events.move, ne["default"].drawMiddle)), e.middles[ee["default"].middleCount]--, 
                e.middleHolder.current = !0, !0;
            }
            function y(e, t, n) {
                return e.pieces[n] ? !1 : (le(ee["default"].partial(e.events.move, ne["default"].drawLeft)), 
                e.pieces[n] = e.discards[ee["default"].discards[1]][0], e.discards[ee["default"].discards[1]].shift(), 
                !0);
            }
            function w(e, t) {
                var n = U(e, t);
                if (!n) return !1;
                le(ee["default"].partial(e.events.move, ne["default"].leaveTaken));
                var r = ee["default"].findPov(e.povSide, e.turnSide);
                return delete e.pieces[n], e.discards[ee["default"].drawByPov(r)].unshift(t), !0;
            }
            function b(e, t, n) {
                if (n && ee["default"].isBoardKey(t) && ee["default"].isBoardKey(n) && K(e, t, n)) {
                    if (p(e, t, n)) return !0;
                    if (v(e, t, n)) return !0;
                }
            }
            function P(e, t) {
                return ee["default"].isMiddleKey(t) && A(e, t) ? (// if (baseUserDrawMiddle(data, orig, dest)) {
                //   callUserFunction(util.partial(data.movable.events.after, move.drawMiddle));
                h(e, t), !0) : void 0;
            }
            function k(e, t, n) {
                return ee["default"].isMiddleKey(t) && T(e, t) ? (// if (baseUserDrawMiddle(data, orig, dest)) {
                //   callUserFunction(util.partial(data.movable.events.after, move.drawMiddle));
                g(e, t, n), !0) : void 0;
            }
            function O(e, t, n) {
                return n && ee["default"].isBoardKey(n) && ee["default"].isDrawLeftKey(t) && B(e, t, n) && y(e, t, n) ? (le(ee["default"].partial(e.movable.events.after, ne["default"].drawLeft)), 
                !0) : void 0;
            }
            function x(e, t, n) {
                n || (ee["default"].isMiddleKey(t) ? P(e, t) && E(e, t) : ee["default"].isDrawLeftKey(t) && B(e) && E(e, t));
            }
            function S(e, t) {
                e.selected ? (t ? e.selected !== t && (b(e, e.selected, t) || O(e, e.selected, t) || k(e, e.selected, t)) : k(e, e.selected, t), 
                E(e, null)) : C(e, t) && E(e, t);
            }
            function E(e, t) {
                if (e.selected = t, t && ee["default"].isBoardKey(t)) if (_(e, t)) {
                    var n = e.middles[ee["default"].gosterge];
                    e.openable.dests = oe["default"].compute(e.opens, e.pieces[t], n);
                } else e.openable.dests = []; else e.openable.dests = [];
            }
            function M(e) {
                return e.povSide === e.turnSide;
            }
            function C(e, t) {
                var n = e.pieces[t];
                return n && e.movable.board;
            }
            function K(e, t, n) {
                return t != n && C(e, t);
            }
            function D(e) {
                return M(e);
            }
            function A(e, t) {
                return D(e) && !e.middleHolder.current && ee["default"].containsX(e.movable.dests, ne["default"].drawMiddle);
            }
            function T(e) {
                return e.middleHolder.current;
            }
            function B(e, t, n) {
                return D(e) && !T(e) && ee["default"].containsX(e.movable.dests, ne["default"].drawLeft);
            }
            function j(e) {
                return M(e) && ee["default"].containsX(e.movable.dests, ne["default"].openSeries);
            }
            function R(e) {
                return M(e) && ee["default"].containsX(e.movable.dests, ne["default"].openPairs);
            }
            function L(e) {
                return M(e) && ee["default"].containsX(e.movable.dests, ne["default"].leaveTaken);
            }
            function G(e) {
                return M(e) && ee["default"].containsX(e.movable.dests, ne["default"].collectOpen);
            }
            function F(e) {
                S(e, null);
            }
            function N(e) {
                e.movable.side = null, e.movable.dests = [], e.openable.dests = [], e.movable.board = !1, 
                F(e);
            }
            function _(e, t) {
                var n = e.pieces[t];
                return !(!n || e.povSide !== e.turnSide);
            }
            function I(e, t) {
                var n = e.middles[ee["default"].gosterge], r = Y(e);
                // get the group where the piece is the last one
                return r = r.filter(function(e) {
                    return e[e.length - 1] === t;
                }), r = r.filter(function(t) {
                    return oe["default"].series(t.map(function(t) {
                        return e.pieces[t];
                    }), n) || oe["default"].pairs(t.map(function(t) {
                        return e.pieces[t];
                    }), n);
                });
            }
            function H(e) {
                var t = ee["default"].allAllowedBoardKeys.slice(1), n = ee["default"].allAllowedBoardKeys.slice(2), r = ee["default"].allAllowedBoardKeys.map(function(e, r) {
                    return [ e, t[r], n[r] ];
                }).filter(function(t) {
                    var n = W(t, 3), r = n[0], a = n[1], i = n[2];
                    return r && a && i && !e.pieces[r] && !e.pieces[a] && !e.pieces[i];
                });
                return r[r.length - 1][1];
            }
            function U(e, t) {
                return ee["default"].allAllowedBoardKeys.filter(function(n) {
                    return e.pieces[n] && ee["default"].pieceEqual(e.pieces[n], t);
                })[0];
            }
            function q(e, t, n, r) {
                var a = X(e, t, n);
                if (!a) return a;
                var i = ee["default"].decBoardKey(a);
                return i !== r && e.pieces[i] && (a = i), -1 !== ee["default"].notAllowedBoardKeys.indexOf(a) ? null : a;
            }
            function X(e, t, n) {
                if (n || e.bounds) {
                    n = n || e.bounds();
                    var r = Math.floor(ee["default"].columns * ((t[0] - n.left) / n.width)), a = Math.floor(ee["default"].rows * ((t[1] - n.top) / n.height));
                    return a >= 0 && a < ee["default"].rows && r >= 0 && r < ee["default"].columns ? ee["default"].pos2key([ r, a ]) : void 0;
                }
            }
            function z(e) {
                return e.map(function(e) {
                    return e.map(function(e) {
                        return e.key;
                    }).join("");
                }).join(" ");
            }
            function $(e) {
                var t = e.middles[ee["default"].gosterge], n = e.withTore, r = V(e).filter(function(e) {
                    return oe["default"].series(e, t, n);
                });
                return z(r);
            }
            function J(e) {
                var t = e.middles[ee["default"].gosterge], n = V(e).filter(function(e) {
                    return oe["default"].pairs(e, t);
                });
                return z(n);
            }
            function V(e) {
                return Y(e).map(function(t) {
                    return t.map(function(t) {
                        return e.pieces[t];
                    });
                });
            }
            function Y(e) {
                var t = ee["default"].pos2key([ ee["default"].columns - 1, 0 ]), n = ee["default"].allKeys.slice(1), r = ee["default"].allKeys.map(function(e, t) {
                    return [ e, n[t] ];
                }).reduce(function(n, r) {
                    var a = W(n, 2), i = a[0], o = a[1], u = W(r, 2), l = u[0], d = u[1];
                    return e.pieces[l] && i.push(l), (l && !e.pieces[l] && d && !e.pieces[d] || l === t) && 0 !== i.length && (o.push(i), 
                    i = []), [ i, o ];
                }, [ [], [] ]), a = W(r, 2), i = a[0], o = a[1];
                return 0 !== i.length && o.push(i), o;
            }
            var Q, W = function() {
                function e(e, t) {
                    var n = [], r = !0, a = !1, i = void 0;
                    try {
                        for (var o, u = e[Symbol.iterator](); !(r = (o = u.next()).done) && (n.push(o.value), 
                        !t || n.length !== t); r = !0) ;
                    } catch (l) {
                        a = !0, i = l;
                    } finally {
                        try {
                            !r && u["return"] && u["return"]();
                        } finally {
                            if (a) throw i;
                        }
                    }
                    return n;
                }
                return function(t, n) {
                    if (Array.isArray(t)) return t;
                    if (Symbol.iterator in Object(t)) return e(t, n);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                };
            }(), Z = e("./util"), ee = r(Z), te = e("./move"), ne = r(te), re = e("./pieces"), ae = r(re), ie = e("./open"), oe = r(ie), ue = ee["default"].wrapGroup, le = ee["default"].callUserFunction;
            t.exports = (Q = {
                playOpenSeries: i,
                playOpenPairs: o,
                playLeaveTaken: u,
                apiDrawMiddleEnd: d
            }, a(Q, "apiDrawMiddleEnd", d), a(Q, "apiForceDrawMiddleEnd", l), a(Q, "apiForceDrawMiddleEnd", l), 
            a(Q, "userMove", b), a(Q, "userDrawLeft", O), a(Q, "userBeginDrawMiddle", P), a(Q, "userEndDrawMiddle", k), 
            a(Q, "selectSquare", S), a(Q, "selectTop", x), a(Q, "setSelected", E), a(Q, "canOpenSeries", j), 
            a(Q, "canOpenPairs", R), a(Q, "canLeaveTaken", L), a(Q, "canCollectOpen", G), a(Q, "stop", N), 
            a(Q, "cancelMove", F), a(Q, "isDroppableOpens", _), a(Q, "findBoardDragGroup", I), 
            a(Q, "getKeyAtDomPos", X), a(Q, "getKeyAtDomPosOnPiece", q), a(Q, "getPieceGroups", V), 
            a(Q, "getPieceGroupSeries", $), a(Q, "getPieceGroupPairs", J), Q);
        }, {
            "./move": 12,
            "./open": 13,
            "./pieces": 14,
            "./util": 16
        } ],
        6: [ function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                };
            }
            var a = e("merge"), i = r(a), o = e("./pieces"), u = r(o);
            t.exports = function(e, t) {
                if (t && (i["default"].recursive(e, t), e.fen)) {
                    // override fen side for spectator
                    e.spectator && (e.fen = e.povSide[0] + e.fen.slice(1)), e.animationHint && (e.animation.current.hint = e.animationHint, 
                    delete e.animationHint);
                    var n = u["default"].read(e.fen);
                    e.pieces = n.pieces, e.discards = n.discards, e.opens = n.opens, e.middles = n.middles, 
                    delete e.fen;
                }
            };
        }, {
            "./pieces": 14,
            merge: 1
        } ],
        7: [ function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                };
            }
            var a = e("./table"), i = r(a), o = e("./board"), u = r(o), l = e("./data"), d = r(l), s = e("./configure"), f = r(s), c = e("./util"), p = r(c), v = e("./anim"), m = r(v), g = e("./drag"), h = r(g), y = e("./pieces"), w = r(y);
            t.exports = function(e) {
                var t = this;
                this.data = (0, d["default"])(e), this.data.flipPiece = function(e, t) {
                    var n = this;
                    t && !this.flippable.current.orig && (this.flippable.current = {
                        orig: e
                    }, this.renderRAF(), setTimeout(function() {
                        n.flippable.current.flip = !0, n.renderRAF(), setTimeout(function() {
                            t.flip = !t.flip, n.flippable.current = {}, n.renderRAF();
                        }, 600);
                    }, 10));
                }.bind(this.data), this.getFen = function() {
                    return w["default"].write(t.data.pieces);
                }, this.getPieceGroupSeries = function() {
                    return u["default"].getPieceGroupSeries(t.data);
                }, this.getPieceGroupPairs = function() {
                    return u["default"].getPieceGroupPairs(t.data);
                }, this.set = (0, m["default"])(f["default"], this.data), this.apiMove = (0, m["default"])(i["default"].apiMove, this.data), 
                this.apiDrawMiddleEnd = (0, m["default"])(u["default"].apiDrawMiddleEnd, this.data), 
                this.playOpenSeries = (0, m["default"])(u["default"].playOpenSeries, this.data), 
                this.playOpenPairs = (0, m["default"])(u["default"].playOpenPairs, this.data), this.playLeaveTaken = (0, 
                m["default"])(u["default"].playLeaveTaken, this.data), this.canLeaveTaken = p["default"].partial(u["default"].canLeaveTaken, this.data), 
                this.canCollectOpen = p["default"].partial(u["default"].canCollectOpen, this.data), 
                this.canOpenSeries = p["default"].partial(u["default"].canOpenSeries, this.data), 
                this.canOpenPairs = p["default"].partial(u["default"].canOpenPairs, this.data), 
                this.stop = (0, m["default"])(function(e) {
                    u["default"].stop(e), h["default"].cancel(e);
                }, this.data), // var onresize = () => {
                //   if (this.data.element)
                // };
                this.onunload = function() {};
            };
        }, {
            "./anim": 3,
            "./board": 5,
            "./configure": 6,
            "./data": 8,
            "./drag": 9,
            "./pieces": 14,
            "./table": 15,
            "./util": 16
        } ],
        8: [ function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                };
            }
            var a = e("merge"), i = (r(a), e("./pieces")), o = r(i), u = e("./configure"), l = r(u);
            t.exports = function(e) {
                var t = {
                    povSide: "east",
                    // side of board
                    turnSide: "east",
                    // turn to play. east | west | north | south
                    lastMove: null,
                    withTore: !1,
                    // allow 12 13 1 binding on group series
                    pieces: o["default"].readBoard(o["default"].mixed),
                    discards: o["default"].readDiscards(o["default"].initialDiscards, "east"),
                    // array of discarded pieces
                    opens: o["default"].readOpenGroups(o["default"].initialOpenGroups),
                    middles: o["default"].readMiddles(o["default"].initialMiddles),
                    selected: null,
                    // piece currently selected  poskey || null
                    middleHolder: {
                        current: !1,
                        // has draw beginned
                        key: null,
                        // key to place on board
                        piece: null
                    },
                    animation: {
                        enabled: !0,
                        duration: 500,
                        // {
                        //   start: timestamp,
                        //   duration: ms,
                        //   anims: {
                        //   }
                        // }
                        current: {}
                    },
                    draggable: {
                        enabled: !0,
                        distance: 3,
                        // minimum distance to initiate a drag, in pixels
                        // { // current
                        //   orig: 1, // orig key of dragging piece
                        //   rel: [100, 70], // x, y of the piece at original position
                        //   pos: [20, -12], // relative current position
                        //   dec: [4, -8], // piece center decay
                        //   over: 10, // square being moused over
                        //   bounds: // current cached board bounds
                        //   started: // whether the drag has started
                        // }
                        current: {}
                    },
                    movable: {
                        board: !0,
                        free: !0,
                        events: {
                            // move key: dm | dl | dd | lt
                            after: function(e, t) {}
                        }
                    },
                    flippable: {
                        enabled: !0,
                        current: {}
                    },
                    openable: {
                        dests: []
                    },
                    events: {
                        move: function(e, t) {}
                    }
                };
                return (0, l["default"])(t, e || {}), t;
            };
        }, {
            "./configure": 6,
            "./pieces": 14,
            merge: 1
        } ],
        9: [ function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                };
            }
            function a(e, t, n) {
                var r = arguments.length <= 3 || void 0 === arguments[3] ? g["default"].rows : arguments[3], a = arguments.length <= 4 || void 0 === arguments[4] ? g["default"].columns : arguments[4];
                return {
                    left: t.left + t.width * n[0] / a,
                    top: t.top + t.height * n[1] / r,
                    width: t.width / a,
                    height: t.height / r
                };
            }
            function i(e, t) {
                if (void 0 === t.button || 0 === t.button) {
                    // only touch or left click
                    t.stopPropagation(), t.preventDefault(), s = t.target;
                    var n = e.selected, r = g["default"].eventPosition(t), i = e.boardBounds(), u = e.opensBounds(), l = e.topBounds(), d = c["default"].getKeyAtDomPosOnPiece(e, r, i);
                    c["default"].selectSquare(e, d), d || (d = v["default"].getDrawKeyAtDomPos(e, r, l)) && c["default"].selectTop(e, d, n), 
                    !d && n && ((d = v["default"].getOpensKeyAtDomPos(e, r, u)) ? v["default"].dropOpens(e, n, d) : (d = v["default"].getDiscardKeyAtDomPos(e, r, l)) && v["default"].dropTop(e, n, d));
                    var f = e.selected === d;
                    if (f && v["default"].isDraggable(e, d)) {
                        var p = g["default"].isBoardKey(d) ? a(e, i, g["default"].key2pos(d)) : a(e, l, g["default"].topKey2pos(d), g["default"].topRows, g["default"].topColumns), m = c["default"].findBoardDragGroup(e, d)[0];
                        e.draggable.current = {
                            dragGroup: m,
                            orig: d,
                            rel: r,
                            epos: r,
                            pos: [ 0, 0 ],
                            dec: [ r[0] - (p.left + p.width / 2), r[1] - (p.top + p.height / 2) ],
                            boardBounds: i,
                            opensBounds: u,
                            topBounds: l,
                            started: !1
                        };
                    }
                    o(e);
                }
            }
            function o(e) {
                g["default"].requestAnimationFrame(function() {
                    var t = e.draggable.current;
                    t.orig && (!t.started && g["default"].distance(t.epos, t.rel) >= e.draggable.distance && (t.started = !0), 
                    t.started && (t.pos = [ t.epos[0] - t.rel[0], t.epos[1] - t.rel[1] ], t.over = c["default"].getKeyAtDomPosOnPiece(e, t.epos, t.boardBounds, t.orig), 
                    !t.over && g["default"].isBoardKey(t.orig) && (t.over = v["default"].getOpensKeyAtDomPos(e, t.epos, t.opensBounds) || v["default"].getDiscardKeyAtDomPos(e, t.epos, t.topBounds)))), 
                    e.render(), t.orig && o(e);
                });
            }
            function u(e, t) {
                e.draggable.current.orig && (e.draggable.current.epos = g["default"].eventPosition(t));
            }
            function l(e, t) {
                var n = e.draggable, r = n.current ? n.current.orig : null;
                if (r) {
                    var a = n.current.over;
                    n.current.started && (c["default"].setSelected(e, null), c["default"].userMove(e, r, a) || v["default"].dropOpens(e, r, a) || v["default"].dropTop(e, r, a) || c["default"].userDrawLeft(e, r, a) || c["default"].userEndDrawMiddle(e, r, a)), 
                    n.current = {};
                }
            }
            function d(e) {
                e.draggable.current.orig && (e.draggable.current = {}, c["default"].selectSquare(e, null));
            }
            var s, f = e("./board"), c = r(f), p = e("./table"), v = r(p), m = e("./util"), g = r(m);
            t.exports = {
                start: i,
                move: u,
                end: l,
                cancel: d
            };
        }, {
            "./board": 5,
            "./table": 15,
            "./util": 16
        } ],
        10: [ function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                };
            }
            function a(e, t) {
                t.stopPropagation(), t.preventDefault(), l["default"].cancelMove(e);
                var n = s["default"].eventPosition(t), r = e.boardBounds(), a = l["default"].getKeyAtDomPosOnPiece(e, n, r), i = e.pieces[a];
                e.flipPiece(a, i);
            }
            function i(e, t) {}
            function o(e, t) {}
            var u = e("./board"), l = r(u), d = e("./util"), s = r(d);
            t.exports = {
                start: a,
                move: i,
                end: o
            };
        }, {
            "./board": 5,
            "./util": 16
        } ],
        11: [ function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                };
            }
            function a(e, t) {
                u["default"].render(e, (0, f["default"])(t), !0);
            }
            function i(e, t) {
                var n = new d["default"](t);
                return u["default"].render(e, (0, f["default"])(n)), (0, h["default"])(n);
            }
            var o = e("mithril"), u = r(o), l = e("./ctrl"), d = r(l), s = e("./view"), f = r(s), c = e("./util"), p = r(c), v = e("./move"), m = r(v), g = e("./api"), h = r(g), y = e("./anim"), w = r(y), b = e("./drag"), P = r(b);
            t.exports = i, t.exports.render = a, t.exports.controller = d["default"], t.exports.view = f["default"], 
            t.exports.util = p["default"], t.exports.move = m["default"], t.exports.anim = w["default"], 
            t.exports.drag = P["default"];
        }, {
            "./anim": 3,
            "./api": 4,
            "./ctrl": 7,
            "./drag": 9,
            "./move": 12,
            "./util": 16,
            "./view": 17,
            mithril: 2
        } ],
        12: [ function(e, t, n) {
            "use strict";
            var r = "dm", a = "dl", i = "dd", o = "lt", u = "ss", l = "os", d = "op", s = "co", f = "dos", c = "dop", p = "dds", v = "ddp", m = "l", g = "r", h = "p";
            t.exports = {
                drawMiddle: r,
                drawLeft: a,
                discard: i,
                leaveTaken: o,
                sign: u,
                openSeries: l,
                openPairs: d,
                collectOpen: s,
                dropOpenSeries: f,
                dropOpenPairs: c,
                dropLeft: m,
                dropRight: g,
                dropReplace: h,
                discardEndSeries: p,
                discardEndPairs: v
            };
        }, {} ],
        13: [ function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                };
            }
            function a(e, t) {
                return e.length === t.length && e.every(function(e, n) {
                    return e === t[n];
                });
            }
            function i(e, t) {
                return t.every(function(t, n) {
                    return t.color === e[n];
                });
            }
            function o(e, t) {
                if (e.length < 3) return !1;
                var n = e.length, r = e[0].color, i = e.map(function(e) {
                    return e.key;
                }), o = i.slice(0).reverse(), u = h["default"].seriesByColor(r);
                t && (u = u.slice(0), u.push(u[0]));
                for (var l = 0; l <= u.length - n; l++) {
                    var d = u.slice(l, l + n);
                    if (a(d, i) | a(d, o)) return !0;
                }
                return !1;
            }
            function u(e) {
                var t = e.length, n = e[0].number;
                return 3 === t | 4 === t && e.every(function(e) {
                    return e.number === n;
                }) ? y.some(function(t) {
                    return i(t.slice(0, e.length), e);
                }) : !1;
            }
            function l(e, t) {
                var n = h["default"].makePiece(t.c, t.n);
                return n.isFake = !0, h["default"].pieceFake(e) ? n : e;
            }
            function d(e, t) {
                return !e.isFake && e.key === t.key;
            }
            // assumes there is a single okey in a group
            function s(e, t) {
                function n(e, t) {
                    return e.filter(function(e) {
                        return t.indexOf(e) < 0;
                    });
                }
                function r(e, t) {
                    return e.key === t.key;
                }
                function a(e, t) {
                    var r = [ "r", "g", "b", "l" ], a = e.filter(function(e) {
                        return !d(e, t);
                    }), i = n(r, a.map(function(e) {
                        return e.c;
                    }));
                    if (i.length < 1) return e;
                    if (a.length < 1) return e;
                    if (!(a.length < e.length)) return e;
                    var o = i[0], u = a[0].n, l = h["default"].makePiece(o, u);
                    return a.push(l), a;
                }
                function i(e, t) {
                    var n;
                    if (0 === e.length) return e;
                    if (e.length < 3) // idk
                    return e;
                    var a = m(e, 3), o = a[0], u = a[1], l = a[2], s = [ o, u, l ];
                    if (n = e.slice(3, e.length), d(o, t)) r(h["default"].pieceUp(u), l) ? s = [ h["default"].pieceDown(u), u, l ] : r(h["default"].pieceDown(u), l) && (s = [ h["default"].pieceUp(u), u, l ]); else if (d(u, t)) r(h["default"].pieceUp(h["default"].pieceUp(o)), l) ? s = [ o, h["default"].pieceUp(o), l ] : r(h["default"].pieceDown(h["default"].pieceDown(o)), l) && (s = [ o, h["default"].pieceDown(o), l ]); else {
                        if (!d(l, t)) return n = i(e.slice(1, e.length), t), n.unshift(e[0]), n;
                        r(h["default"].pieceUp(o), u) ? s = [ o, u, h["default"].pieceUp(u) ] : r(h["default"].pieceDown(o), u) && (s = [ o, u, h["default"].pieceDown(u) ]);
                    }
                    return s.concat(n);
                }
                function o(e, t) {
                    if (2 != e.length) return e;
                    var n = m(e, 2), r = n[0], a = n[1];
                    return d(r, t) ? [ a, a ] : d(a, t) ? [ r, r ] : e;
                }
                // single okey only
                if (e.filter(function(e) {
                    return d(e, t);
                }).length > 1) return e;
                if (e.length < 3) return o(e, t);
                var u = e.filter(function(e) {
                    return !d(e, t);
                });
                return u.every(function(e) {
                    return e.n === u[0].n;
                }) ? a(e, t) : u.every(function(e) {
                    return e.c === u[0].c;
                }) ? i(e, t) : e;
            }
            function f(e, t) {
                var n = arguments.length <= 2 || void 0 === arguments[2] ? !1 : arguments[2], r = h["default"].pieceUp(t), a = e.map(function(e) {
                    return l(e, r);
                }), i = s(a, r);
                return o(i, n) | u(i);
            }
            function c(e, t) {
                if (2 !== e.length) return !1;
                var n = h["default"].pieceUp(t), r = e.map(function(e) {
                    return l(e, n);
                }), a = s(r, n), i = m(a, 2), o = i[0], u = i[1];
                return o.key === u.key;
            }
            function p(e, t, n) {
                var r = [], a = h["default"].pieceUp(n);
                return t = l(t, a), e.series.forEach(function(i, o) {
                    var u = i.slice(0), l = i.slice(0);
                    u.splice(0, 0, t), l.splice(i.length, 0, t), f(u, n) && r.push(h["default"].getOpenSerieKeyFromGroupIndex(e, o, 0)), 
                    f(l, n) && r.push(h["default"].getOpenSerieKeyFromGroupIndex(e, o, i.length + 1));
                    var s = i.map(function(e) {
                        return d(e, a) ? t : e;
                    });
                    if (f(s, n)) {
                        var c;
                        i.forEach(function(e, t) {
                            d(e, a) && (c = t);
                        }), r.push(h["default"].getOpenSerieKeyFromGroupIndex(e, o, c + 1));
                    }
                }), e.pairs.forEach(function(i, o) {
                    var u = i.map(function(e) {
                        return d(e, a) ? t : e;
                    });
                    if (c(u, n)) {
                        var l = v(i, a);
                        r.push(h["default"].getOpenPairKeyFromGroupIndex(e, o, l));
                    }
                }), r;
            }
            function v(e, t) {
                var n;
                return e.forEach(function(e, r) {
                    d(e, t) && (n = r);
                }), n;
            }
            Object.defineProperty(n, "__esModule", {
                value: !0
            });
            var m = function() {
                function e(e, t) {
                    var n = [], r = !0, a = !1, i = void 0;
                    try {
                        for (var o, u = e[Symbol.iterator](); !(r = (o = u.next()).done) && (n.push(o.value), 
                        !t || n.length !== t); r = !0) ;
                    } catch (l) {
                        a = !0, i = l;
                    } finally {
                        try {
                            !r && u["return"] && u["return"]();
                        } finally {
                            if (a) throw i;
                        }
                    }
                    return n;
                }
                return function(t, n) {
                    if (Array.isArray(t)) return t;
                    if (Symbol.iterator in Object(t)) return e(t, n);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                };
            }(), g = e("./pieces"), h = r(g), y = function() {
                var e = h["default"].colors, t = [];
                for (var n in e) for (var r in e) for (var a in e) for (var i in e) n !== r && n !== a && n !== i && r !== a && r !== i && a !== i && t.push([ e[n], e[r], e[a], e[i] ]);
                return t;
            }();
            n["default"] = {
                compute: p,
                series: f,
                pairs: c,
                findOkeyIndex: v
            }, t.exports = n["default"];
        }, {
            "./pieces": 14
        } ],
        14: [ function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                };
            }
            function a(e) {
                var t = [];
                for (var n in A) t.push(k(e, n).key);
                return t;
            }
            function i(e) {
                var t = {
                    0: 0,
                    1: 1,
                    2: 2,
                    3: 3,
                    4: 4,
                    5: 5,
                    6: 6,
                    7: 7,
                    8: 8,
                    9: 9
                }, n = t[e[0]], r = t[e[1]];
                return void 0 === r ? void 0 === n ? {
                    left: e.slice(1)
                } : {
                    number: n,
                    left: e.slice(1)
                } : {
                    number: 10 * n + r,
                    left: e.slice(2)
                };
            }
            function o(e) {
                var t = /([l|r|p])(\d\d?)/, n = e.match(t), r = n[1], a = parseInt(n[2]);
                return {
                    type: r,
                    groupIndex: a
                };
            }
            function u(e) {
                var t = e[0], n = e[1], r = e[2], a = 2;
                return D[t] ? (A[n + r] && (n += r, a = 3), {
                    piece: k(t, n),
                    left: e.slice(a)
                }) : {
                    left: e.slice(1)
                };
            }
            function l(e) {
                var t = [], n = [];
                for (e += "\n"; e.length > 0; ) {
                    var r = u(e);
                    r.piece ? n.push(r.piece) : (n.length > 0 && t.push(n), n = []), e = r.left;
                }
                return t;
            }
            function d(e) {
                for (var t = [], n = 0; e.length > 0; ) {
                    var r = u(e);
                    r.piece && (t[n] = r.piece), n++, e = r.left;
                }
                return t;
            }
            function s(e) {
                var t = {};
                e = d(e);
                for (var n = 0, r = 0; r < e.length; r++) {
                    if (e[r]) {
                        for (;100 > n && !K["default"].isAllowedBoardKey(K["default"].encodeKey(n, "b")); ) n++;
                        t[K["default"].encodeKey(n, "b")] = e[r], n++;
                    }
                    n++;
                }
                return t;
            }
            function f(e, t) {
                e = e.split(" ");
                var n = {};
                return K["default"].allSides.map(function(e) {
                    return K["default"].findPov(t, e);
                }).forEach(function(t, r) {
                    var a = d(e[r] || "");
                    n[K["default"].discardByPov(t)] = a;
                }), n;
            }
            function c(e) {
                var t = e.split("/"), n = M(t, 2), r = n[0], a = n[1];
                r = l(r), a = l(a);
                var i = p(r, a);
                return {
                    series: r,
                    pairs: a,
                    layout: i,
                    relayout: function(e) {
                        e.opens.layout = p(e.opens.series, e.opens.pairs);
                    }
                };
            }
            function p(e, t) {
                var n, r, a, i, o, u = {}, l = {
                    series: {},
                    pairs: {}
                }, d = [], s = 0;
                for (n = 0; n < e.length; n++) {
                    var f = e[n];
                    i = (d[s] || 1) - 1, o = s, l.series[K["default"].miniPos2key([ i, o ])] = n;
                    for (var c = 0; c < f.length; c++) a = d[s] || 1, r = K["default"].miniPos2key([ a, s ]), 
                    u[r] = f[c], d[s] = a + 1;
                    d[s] += 2, s++, s >= K["default"].miniRows && (s = 0);
                }
                for (d = [], n = 0, c = 0, r = 0, a = 0, s = 0, n = 0; n < t.length; n++) {
                    var p = t[n];
                    // go reverse
                    for (i = (d[s] || K["default"].miniColumns - 1) - 1, o = s, l.pairs[K["default"].miniPos2key([ i, o ])] = n, 
                    c = p.length - 1; c >= 0; c--) a = d[s] || K["default"].miniColumns - 1, r = K["default"].miniPos2key([ a, s ]), 
                    u[r] = p[c], d[s] = a - 1;
                    d[s] -= 1, s++, s >= K["default"].miniRows && (s = 0);
                }
                return {
                    layout: u,
                    groupMap: l
                };
            }
            function v(e, t, n) {
                for (var r in e) if (e[r] === t) {
                    var a = K["default"].miniKey2pos(r), i = M(a, 2), o = i[0], u = i[1], l = [ o + n, u ];
                    return K["default"].miniPos2key(l);
                }
            }
            function m(e, t, n) {
                var r = e.layout.groupMap.pairs;
                return v(r, t, n);
            }
            function g(e, t, n) {
                var r = e.layout.groupMap.series;
                return v(r, t, n);
            }
            function h(e, t) {
                var n = e.opens, r = n.series, a = n.layout.groupMap, i = M(t, 2), o = i[0], u = i[1];
                for (var l in a.series) {
                    var d = a.series[l], s = r[d], f = K["default"].miniKey2pos(l), c = M(f, 2), p = c[0], v = c[1], m = o - p;
                    if (!(0 > m || m > s.length + 1 || u != v)) return [ d, m ];
                }
            }
            function y(e, t) {
                var n = e.opens, r = n.pairs, a = n.layout.groupMap, i = M(t, 2), o = i[0], u = i[1];
                for (var l in a.pairs) {
                    var d = a.pairs[l], s = (r[d], K["default"].miniKey2pos(l)), f = M(s, 2), c = f[0], p = f[1], v = o - c;
                    if (!(0 > v || v > 1 || u != p)) return [ d, v ];
                }
            }
            function w(e) {
                var t = {}, n = i(e);
                return t[K["default"].middleCount] = n.number, n = u(n.left), t[K["default"].gosterge] = n.piece, 
                t;
            }
            function b(e) {
                e = e.split("/");
                var t = 2, n = 3, r = 4, a = 1, i = 0, o = {
                    e: "east",
                    w: "west",
                    n: "north",
                    s: "south"
                }[e[i]];
                return {
                    pieces: s(e[t]),
                    discards: f(e[n], o),
                    opens: c([ e[r], e[r + 1] ].join("/")),
                    middles: w(e[a])
                };
            }
            function P(e) {
                var t = K["default"].allKeys.map(function(t) {
                    return e[t];
                }).map(function(e) {
                    return e && e.key || " ";
                }).join("");
                return t.replace(/([^\s])\s/g, "$1");
            }
            function k(e, t) {
                return {
                    color: D[e],
                    number: A[t],
                    c: e,
                    n: parseInt(t),
                    key: e + t
                };
            }
            function O(e) {
                var t = e.c, n = e.n % 13 + 1;
                return k(t, n);
            }
            function x(e) {
                var t = e.c, n = (e.n + 11) % 13 + 1;
                return k(t, n);
            }
            function S(e) {
                return "fake" === e.color;
            }
            function E(e) {
                return e.length > 0 && 14 === e.match(T).length;
            }
            var M = function() {
                function e(e, t) {
                    var n = [], r = !0, a = !1, i = void 0;
                    try {
                        for (var o, u = e[Symbol.iterator](); !(r = (o = u.next()).done) && (n.push(o.value), 
                        !t || n.length !== t); r = !0) ;
                    } catch (l) {
                        a = !0, i = l;
                    } finally {
                        try {
                            !r && u["return"] && u["return"]();
                        } finally {
                            if (a) throw i;
                        }
                    }
                    return n;
                }
                return function(t, n) {
                    if (Array.isArray(t)) return t;
                    if (Symbol.iterator in Object(t)) return e(t, n);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                };
            }(), C = e("./util"), K = r(C), D = {
                b: "blue",
                r: "red",
                g: "green",
                l: "black",
                f: "fake"
            }, A = {
                "1": "one",
                "2": "two",
                "3": "three",
                "4": "four",
                "5": "five",
                "6": "six",
                "7": "seven",
                "8": "eight",
                "9": "nine",
                "10": "ten",
                "11": "eleven",
                "12": "twelve",
                "13": "thirteen"
            }, T = /[f|r|l|b|g]\d\d?/g, B = function() {
                var e = {};
                for (var t in D) e[D[t]] = a(t);
                return e;
            }(), j = function(e) {
                return B[e];
            }, R = "g7r7b7l7 g8r8b8l8 g13r13b13l13 l12 r6r5r4r12r13 g9g8g13 g6 l8l7l12", L = "r1g1l1b1 r2g2l2b2 r3g3l3b3 r4g4l4b4 r13g13l13b13 r1g1l1b1", G = "r1r2 r3r4r5r6r7r8r9r10r11r12r13l1l2l3l4l5l6l7   g1g2  l3", F = "20l3", N = "b1  r1r2 g1", _ = "r8l8b8\nb1b2b3\nb9b10b11b12\nl13r13b13\nr12b12g12\nr7r8r9r10\ng10g11g12\nl6b6r6\nl9l10l11\nb7l7r7g7\nr13l13b13g13\nl10r10b10g10\nl6r6g6\nl1b1g1\n/r1r1\ng1g1\ng2g2\ng3g3\ng4g4\ng5g5\ng6g6\ng7g7\ng8g8\ng9g9\ng10g10\ng11g11\ng12g12\n\n";
            t.exports = {
                validDuzOkeyGroupFen: E,
                initial: G,
                rainbow: L,
                mixed: R,
                write: P,
                read: b,
                readDropPos: o,
                readPiece: u,
                readBoard: s,
                initialMiddles: F,
                initialDiscards: N,
                initialOpenGroups: _,
                readMiddles: w,
                readDiscards: f,
                readPieceGroup: l,
                readOpenGroups: c,
                layoutOpens: p,
                seriesByColor: j,
                makePiece: k,
                pieceUp: O,
                pieceDown: x,
                pieceFake: S,
                colors: D,
                getOpenSerieKeyFromGroupIndex: g,
                getOpenPairKeyFromGroupIndex: m,
                getOpenSerieFromPos: h,
                getOpenPairFromPos: y
            };
        }, {
            "./util": 16
        } ],
        15: [ function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                };
            }
            function a(e, t) {
                var n = arguments.length <= 2 || void 0 === arguments[2] ? {} : arguments[2], r = n.piece, a = n.group, p = n.pos, v = B["default"].findPov(e.povSide, e.turnSide);
                if (e.turnSide !== e.povSide || e.spectator) switch (t) {
                  case R["default"].drawMiddle:
                    s(e), e.animation.current.hint = R["default"].drawMiddle;
                    break;

                  case R["default"].drawLeft:
                    f(e, B["default"].drawByPov(v)), e.animation.current.hint = R["default"].drawLeft;
                    break;

                  case R["default"].discard:
                    r = G["default"].readPiece(r).piece, d(e, B["default"].discardByPov(v), r), e.animation.current.hint = R["default"].discard;
                    break;

                  case R["default"].leaveTaken:
                    r = G["default"].readPiece(r).piece, c(e, B["default"].drawByPov(v), r), e.animation.current.hint = R["default"].leaveTaken;
                    break;

                  case R["default"].openSeries:
                    a = G["default"].readPieceGroup(a), u(e, a), e.animation.current.hint = R["default"].openSeries;
                    break;

                  case R["default"].openPairs:
                    a = G["default"].readPieceGroup(a), l(e, a), e.animation.current.hint = R["default"].openSeries;
                    break;

                  case R["default"].dropOpenSeries:
                    r = G["default"].readPiece(r).piece, p = G["default"].readDropPos(p), i(e, r, p);
                    break;

                  case R["default"].dropOpenPairs:
                    r = G["default"].readPiece(r).piece, p = G["default"].readDropPos(p), o(e, r, p);
                    break;

                  default:
                    console.error("unknown move");
                } else if (e.spectator) t === R["default"].leaveTaken && (r = G["default"].readPiece(r).piece, 
                c(e, B["default"].drawByPov(v), r), e.animation.current.hint = R["default"].leaveTaken); else switch (t) {
                  case R["default"].discard:
                    r = G["default"].readPiece(r).piece, m(e, r, B["default"].discards[2]), e.animation.current.hint = R["default"].discard;
                    break;

                  case R["default"].drawMiddle:
                    r = G["default"].readPiece(r).piece, e.middleHolder.current ? I["default"].apiDrawMiddleEnd(e, r) : I["default"].apiForceDrawMiddleEnd(e, r), 
                    e.animation.current.hint = R["default"].drawMiddle;
                    break;

                  case R["default"].leaveTaken:
                    I["default"].playLeaveTaken(e, r);
                }
            }
            function i(e, t, n) {
                var r = n.type, a = n.groupIndex, i = e.opens.series[a], o = r !== R["default"].dropReplace ? 0 : 1, u = 0;
                if (r === R["default"].dropLeft) u = 0; else if (r === R["default"].dropRight) u = i.length + 1; else {
                    var l = G["default"].pieceUp(e.middles[B["default"].gosterge]);
                    u = N["default"].findOkeyIndex(i, l) + 1;
                }
                i.splice(u - o, o, t), e.opens.relayout(e);
            }
            function o(e, t, n) {
                var r = n.groupIndex, a = e.opens.pairs[r], i = G["default"].pieceUp(e.middles[B["default"].gosterge]), o = N["default"].findOkeyIndex(a, i);
                a.splice(o, 1, t), e.opens.relayout(e);
            }
            function u(e, t) {
                var n = t, r = e.opens.series.concat(n);
                e.opens.series = r, e.opens.relayout(e);
            }
            function l(e, t) {
                var n = t, r = e.opens.pairs.concat(n);
                e.opens.pairs = r, e.opens.relayout(e);
            }
            function d(e, t, n) {
                //pushLastMove(data, dest);
                return e.discards[t].unshift(n), e.lastMove = [ t ], !0;
            }
            function s(e) {
                return e.middles[B["default"].middleCount]--, e.lastMove = [ B["default"].middleCount ], 
                !0;
            }
            function f(e, t) {
                return e.discards[t].shift(), !0;
            }
            function c(e, t, n) {
                return e.discards[t].unshift(n), !0;
            }
            function p(e, t, n, r) {
                if (!e.pieces[t] || !r) return !1;
                var a = e.pieces[t];
                X(B["default"].partial(e.events.move, R["default"].dropOpenSeries, U(a.key)));
                var i = A(r, 2), o = i[0], u = i[1], l = e.opens.series[o], d = w(l, u), s = d !== R["default"].dropReplace ? 0 : 1;
                if (l.splice(u - s, s, a), e.opens.relayout(e), delete e.pieces[t], d === R["default"].dropReplace) {
                    var f = G["default"].pieceUp(e.middles[B["default"].gosterge]);
                    e.pieces[t] = f;
                }
                return !0;
            }
            function v(e, t, n, r) {
                if (!e.pieces[t] || !r) return !1;
                var a = e.pieces[t];
                X(B["default"].partial(e.events.move, R["default"].dropOpenPairs, U(a.key)));
                var i = A(r, 2), o = i[0], u = i[1], l = e.opens.pairs[o];
                l.splice(u, 1, a), e.opens.relayout(e), delete e.pieces[t];
                var d = G["default"].pieceUp(e.middles[B["default"].gosterge]);
                return e.pieces[t] = d, !0;
            }
            function m(e, t, n) {
                for (var r in e.pieces) {
                    var a = e.pieces[r];
                    if (a && B["default"].pieceEqual(t, a)) return g(e, r, n), !0;
                }
                return !1;
            }
            function g(e, t, n) {
                var r = e.pieces[t];
                //pushLastMove(data, dest);
                return r ? (X(B["default"].partial(e.events.move, R["default"].discard, U(r.key))), 
                e.discards[n].unshift(e.pieces[t]), delete e.pieces[t], e.lastMove = [ n ], !0) : !1;
            }
            function h(e, t) {
                var n = e.pieces[t];
                return n && B["default"].pieceEqual(n, e.middles[B["default"].gosterge]) ? (X(B["default"].partial(e.events.move, R["default"].sign, U(n.key))), 
                !0) : !1;
            }
            function y(e, t) {
                var n = e.pieces[t];
                if (!n) return !1;
                delete e.pieces[t];
                var r = (G["default"].write(e.pieces), I["default"].getPieceGroupSeries(e)), a = I["default"].getPieceGroupPairs(e);
                if (G["default"].validDuzOkeyGroupFen(r)) X(B["default"].partial(e.events.move, R["default"].discardEndSeries, q(r))); else {
                    if (!G["default"].validDuzOkeyGroupFen(a)) return e.pieces[t] = n, !1;
                    X(B["default"].partial(e.events.move, R["default"].discardEndPairs, q(a)));
                }
                return !0;
            }
            function w(e, t) {
                return 0 === t ? R["default"].dropLeft : t === e.length + 1 ? R["default"].dropRight : R["default"].dropReplace;
            }
            function b(e, t, n) {
                if (n && B["default"].isOpensKey(n) && E(e, t, n)) {
                    var r, a, i, o, u, l = e.pieces[t], d = G["default"].getOpenSerieFromPos(e, B["default"].miniKey2pos(n));
                    if (d) {
                        var s = A(d, 2);
                        r = s[0], a = s[1], i = e.opens.series[r], o = w(i, a), u = o + r;
                    }
                    if (p(e, t, n, d)) return X(B["default"].partial(e.movable.events.after, R["default"].dropOpenSeries, H(l.key, u))), 
                    !0;
                    var f = G["default"].getOpenPairFromPos(e, B["default"].miniKey2pos(n));
                    if (f) {
                        var c = A(f, 2);
                        r = c[0], a = c[1], i = e.opens.pairs[r], o = w(i, a), u = o + r;
                    }
                    if (v(e, t, n, f)) return X(B["default"].partial(e.movable.events.after, R["default"].dropOpenPairs, H(l.key, u))), 
                    !0;
                }
                return !1;
            }
            function P(e, t, n) {
                var r = e.pieces[t];
                if (n && n === B["default"].discards[2]) {
                    if (M(e, t, n) && g(e, t, n)) return X(B["default"].partial(e.movable.events.after, R["default"].discard, U(r.key))), 
                    !0;
                } else if (n === B["default"].gosterge) {
                    if (K(e, t) && h(e, t)) return X(B["default"].partial(e.movable.events.after, R["default"].sign, U(r.key))), 
                    !0;
                    if (C(e, t) && y(e, t)) {
                        var a = (G["default"].write(e.pieces), I["default"].getPieceGroupSeries(e)), i = I["default"].getPieceGroupPairs(e);
                        return G["default"].validDuzOkeyGroupFen(a) ? X(B["default"].partial(e.movable.events.after, R["default"].discardEndSeries, q(a))) : G["default"].validDuzOkeyGroupFen(i) && X(B["default"].partial(e.movable.events.after, R["default"].discardEndPairs, q(i))), 
                        !0;
                    }
                }
                return !1;
            }
            function k(e, t) {
                O(e, t);
            }
            function O(e, t) {
                e.selected = t;
            }
            function x(e, t) {
                return B["default"].isMiddleKey(t) || B["default"].isDrawLeftKey(t) ? e.povSide === e.turnSide : B["default"].isBoardKey(t);
            }
            function S(e) {
                return e.povSide === e.turnSide;
            }
            function E(e, t, n) {
                var r = e.middles[B["default"].gosterge];
                return I["default"].isDroppableOpens(e, t) && B["default"].isBoardKey(t) && B["default"].isOpensKey(n) && B["default"].containsX(e.movable.dests, R["default"].dropOpenSeries) && B["default"].containsX(e.movable.dests, R["default"].dropOpenPairs) && B["default"].containsX(N["default"].compute(e.opens, e.pieces[t], r), n);
            }
            function M(e, t, n) {
                return S(e) && B["default"].containsX(e.movable.dests, R["default"].discard);
            }
            function C(e, t) {
                return S(e) && B["default"].containsX(e.movable.dests, R["default"].discardEndSeries);
            }
            function K(e, t) {
                return S(e) && B["default"].containsX(e.movable.dests, R["default"].showSign);
            }
            function D(e) {
                var t = arguments.length <= 1 || void 0 === arguments[1] ? B["default"].topColumns : arguments[1], n = arguments.length <= 2 || void 0 === arguments[2] ? B["default"].topRows : arguments[2];
                return function(r, a, i) {
                    if (i || r.bounds) {
                        i = i || r.bounds();
                        var o = Math.floor(t * ((a[0] - i.left) / i.width)), u = Math.floor(n * ((a[1] - i.top) / i.height));
                        return u >= 0 && n > u && o >= 0 && t > o ? e(u, o) : void 0;
                    }
                };
            }
            Object.defineProperty(n, "__esModule", {
                value: !0
            });
            var A = function() {
                function e(e, t) {
                    var n = [], r = !0, a = !1, i = void 0;
                    try {
                        for (var o, u = e[Symbol.iterator](); !(r = (o = u.next()).done) && (n.push(o.value), 
                        !t || n.length !== t); r = !0) ;
                    } catch (l) {
                        a = !0, i = l;
                    } finally {
                        try {
                            !r && u["return"] && u["return"]();
                        } finally {
                            if (a) throw i;
                        }
                    }
                    return n;
                }
                return function(t, n) {
                    if (Array.isArray(t)) return t;
                    if (Symbol.iterator in Object(t)) return e(t, n);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance");
                };
            }(), T = e("./util"), B = r(T), j = e("./move"), R = r(j), L = e("./pieces"), G = r(L), F = e("./open"), N = r(F), _ = e("./board"), I = r(_), H = B["default"].wrapDrop, U = B["default"].wrapPiece, q = B["default"].wrapGroup, X = B["default"].callUserFunction, z = D(function(e, t) {
                return B["default"].miniPos2key([ t, e ]);
            }, B["default"].miniColumns, B["default"].miniRows), $ = D(function(e, t) {
                if (e === B["default"].topRows - 1) {
                    // draw left
                    if (0 === t) return B["default"].discards[1];
                    // middle
                    if (t === B["default"].topColumns - 4) return B["default"].middleCount;
                }
            }), J = D(function(e, t) {
                if (e === B["default"].topRows - 1) {
                    // discard down is at the bottom right
                    if (t === B["default"].topColumns - 1) return B["default"].discards[2];
                    if (t === B["default"].topColumns - 3) // gosterge is on third column to last
                    return B["default"].gosterge;
                }
            });
            n["default"] = {
                apiMove: a,
                selectTop: k,
                dropTop: P,
                dropOpens: b,
                isDraggable: x,
                getDrawKeyAtDomPos: $,
                getDiscardKeyAtDomPos: J,
                getOpensKeyAtDomPos: z
            }, t.exports = n["default"];
        }, {
            "./board": 5,
            "./move": 12,
            "./open": 13,
            "./pieces": 14,
            "./util": 16
        } ],
        16: [ function(e, t, n) {
            "use strict";
            function r(e, t) {
                return F[e][t];
            }
            function a(e, t) {
                return e.color === t.color && e.number === t.number;
            }
            function i(e, t) {
                for (var n = [], r = 0; e > r; r++) for (var a = 0; t > a; a++) n.push([ a, r ]);
                return n;
            }
            function o(e, t) {
                return t + e;
            }
            function u(e, t) {
                return parseInt(e.slice(1));
            }
            function l(e) {
                var t = arguments.length <= 1 || void 0 === arguments[1] ? 1 : arguments[1];
                return o(u(e) - t, Y);
            }
            function d(e) {
                return e[0] === Y;
            }
            function s(e) {
                return e[0] === Q;
            }
            function f(e) {
                return e === z;
            }
            function c(e) {
                return e === X[1];
            }
            function p(e) {
                var t = e[1] * A + e[0];
                return o(t, Y);
            }
            function v(e) {
                return e = u(e), [ e % A, Math.floor(e / A) ];
            }
            function m(e) {
                return J[e];
            }
            function g(e) {
                var t = e[1] * R + e[0];
                return o(t, Q);
            }
            function h(e) {
                return e = u(e), [ e % R, Math.floor(e / R) ];
            }
            function y(e) {
                var t = [];
                for (var n in e) e[n] && t.push(n);
                return t.join(" ");
            }
            function w(e, t) {
                return e && -1 !== e.indexOf(t);
            }
            function b(e) {
                return e.touches ? [ e.targetTouches[0].clientX, e.targetTouches[0].clientY ] : [ e.clientX, e.clientY ];
            }
            function P(e, t) {
                return Math.sqrt(Math.pow(e[0] - t[0], 2) + Math.pow(e[1] - t[1], 2));
            }
            function k() {
                return "transform" in document.body.style ? "transform" : "webkitTransform" in document.body.style ? "webkitTransform" : "mozTransform" in document.body.style ? "mozTransform" : "oTransform" in document.body.style ? "oTransform" : "msTransform";
            }
            function O() {
                return D || (D = k()), D;
            }
            function x(e) {
                return "translate(" + e[0] + "px," + e[1] + "px)";
            }
            function S(e, t) {
                return e.bind.apply(e, [ null ].concat(t));
            }
            function E() {
                return S(arguments[0], Array.prototype.slice.call(arguments, 1));
            }
            function M(e) {
                return 2 === e.buttons || 2 === e.button;
            }
            function C(e) {
                var t, n = function() {
                    return void 0 === t && (t = e()), t;
                };
                return n.clear = function() {
                    t = void 0;
                }, n;
            }
            function K(e) {
                setTimeout(e, 1);
            }
            var D, A = 32, T = 2, B = 16, j = 7, R = 20, L = 8, G = [ "east", "west", "north", "south" ], F = {
                east: {
                    east: "down",
                    west: "up",
                    north: "right",
                    south: "left"
                },
                west: {
                    east: "up",
                    west: "down",
                    north: "left",
                    south: "right"
                },
                north: {
                    east: "left",
                    west: "right",
                    north: "down",
                    south: "up"
                },
                south: {
                    east: "right",
                    west: "left",
                    north: "up",
                    south: "down"
                }
            }, N = {
                up: 0,
                left: 1,
                down: 2,
                right: 3
            }, _ = {
                up: 3,
                left: 0,
                down: 1,
                right: 2
            }, I = {
                up: [ .5, 0 ],
                left: [ 0, .5 ],
                right: [ 1, .5 ],
                down: [ .5, 1 ]
            }, H = function(e) {
                return I[e];
            }, U = function(e) {
                return X[N[e]];
            }, q = function(e) {
                return X[_[e]];
            }, X = [ "dup", "dleft", "ddown", "dright" ], z = "mmiddleCount", $ = "mgosterge", J = {
                dup: [ 0, 0 ],
                dleft: [ 0, j - 1 ],
                ddown: [ B - 1, j - 1 ],
                dright: [ B - 1, 0 ],
                mmiddleCount: [ B - 4, j - 1 ],
                mgosterge: [ B - 3, j - 1 ]
            }, V = {
                color: "empty",
                number: 1
            }, Y = "b", Q = "o", W = i(T, A), Z = i(L, R), ee = [ [ 0, 0 ], [ 30, 0 ], [ 31, 0 ], [ 32, 0 ], [ 62, 0 ], [ 63, 0 ] ].map(p), te = function(e) {
                return -1 === ee.indexOf(e);
            }, ne = W.map(p), re = ne.filter(te), ae = function(e) {
                return -1 !== re.indexOf(e);
            }, ie = Z.map(g), oe = function(e) {
                var t = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
                return t.piece = e, t;
            }, ue = function(e) {
                return {
                    group: e
                };
            }, le = function(e, t) {
                return {
                    piece: e,
                    pos: t
                };
            };
            t.exports = {
                topColumns: B,
                topRows: j,
                columns: A,
                rows: T,
                emptyPiece: V,
                pieceEqual: a,
                allSides: G,
                allPos: W,
                allKeys: ne,
                topKey2pos: m,
                pos2key: p,
                key2pos: v,
                miniColumns: R,
                miniRows: L,
                miniAllPos: Z,
                miniAllKeys: ie,
                miniPos2key: g,
                miniKey2pos: h,
                encodeKey: o,
                decBoardKey: l,
                notAllowedBoardKeys: ee,
                isAllowedBoardKey: te,
                isAllAllowedBoardKey: ae,
                allAllowedBoardKeys: re,
                isBoardKey: d,
                isOpensKey: s,
                isMiddleKey: f,
                isDrawLeftKey: c,
                findPov: r,
                vectorByPov: H,
                drawByPov: q,
                discardByPov: U,
                discards: X,
                middleCount: z,
                gosterge: $,
                classSet: y,
                containsX: w,
                eventPosition: b,
                distance: P,
                transformProp: O,
                translate: x,
                requestAnimationFrame: (window.requestAnimationFrame || window.setTimeout).bind(window),
                partialApply: S,
                partial: E,
                isRightButton: M,
                memo: C,
                wrapPiece: oe,
                wrapGroup: ue,
                wrapDrop: le,
                callUserFunction: K
            };
        }, {} ],
        17: [ function(e, t, n) {
            "use strict";
            function r(e) {
                return e && e.__esModule ? e : {
                    "default": e
                };
            }
            function a(e) {
                return e.color + " " + e.number;
            }
            function i(e) {
                return {
                    left: e[0] * (100 / j["default"].columns) + "%",
                    top: e[1] * (100 / j["default"].rows) + "%"
                };
            }
            function o(e) {
                return {
                    left: e[0] * (100 / j["default"].miniColumns) + "%",
                    top: e[1] * (100 / j["default"].miniRows) + "%"
                };
            }
            function u(e, t, n, r) {
                var i = (e.data, {
                    key: n,
                    style: o(t),
                    "class": a(r) + " mini"
                });
                if (e.data.animation.current.anims) {
                    var u = e.data.animation.current.anims[n], l = e.data.animation.current.scales[n];
                    u && (i["class"] += " animating", i.style[j["default"].transformProp()] = j["default"].translate(u[1]), 
                    l && (i.style[j["default"].transformProp()] += " scale(" + l[0] + ", " + l[1] + ")", 
                    i.style.transformOrigin = "center"));
                }
                return {
                    tag: "piece",
                    attrs: i
                };
            }
            function l(e, t, n) {
                var r = arguments.length <= 3 || void 0 === arguments[3] ? !1 : arguments[3], i = e.data, o = j["default"].classSet({
                    selected: i.selected === t,
                    "last-move": i.lastMove && j["default"].containsX(i.lastMove, t)
                }), u = {
                    style: {},
                    "class": [ a(n), t, o ].join(" "),
                    "data-middle-count": e.data.middles[t]
                }, l = e.data.draggable.current;
                if (r && l.orig === t) u.style[j["default"].transformProp()] = j["default"].translate([ l.pos[0] + l.dec[0], l.pos[1] + l.dec[1] ]), 
                u["class"] += " dragging"; else if (!r && e.data.animation.current.anims) {
                    var d = e.data.animation.current.anims[t];
                    d && (u["class"] += " animating", u.style[j["default"].transformProp()] = j["default"].translate(d[1]));
                }
                return {
                    tag: "piece",
                    attrs: u
                };
            }
            function d(e, t, n, r) {
                var i = arguments.length <= 4 || void 0 === arguments[4] ? !0 : arguments[4], o = arguments.length <= 5 || void 0 === arguments[5] ? t : arguments[5], u = e.data, l = j["default"].classSet({
                    selected: u.selected === t
                }), d = {
                    style: {},
                    "class": [ a(n), t, l ].join(" ")
                };
                r && (d["class"] += " " + r);
                var s = e.data.draggable.current;
                if (i && s.orig === t) d.style[j["default"].transformProp()] = j["default"].translate([ s.pos[0] + s.dec[0], s.pos[1] + s.dec[1] ]), 
                d["class"] += " dragging"; else if (i && e.data.animation.current.anims) {
                    var f = e.data.animation.current.anims[o];
                    f && (d["class"] += " animating", d.style[j["default"].transformProp()] = j["default"].translate(f[1]));
                }
                return {
                    tag: "piece",
                    attrs: d
                };
            }
            function s(e, t, n) {
                var r = (e.data, j["default"].classSet({
                    "piece-holder": !0
                })), a = {
                    //    key: key,
                    style: {},
                    "class": [ t, r, n ].join(" ")
                };
                return {
                    tag: "div",
                    attrs: a
                };
            }
            function f(e, t, n, r) {
                var a = "flipper" + (n ? " hover" : "") + " " + r, i = {
                    top: 0,
                    left: 0
                }, o = e.attrs.style;
                e.attrs.style = i, t.attrs.style = i;
                var u = {
                    "class": a,
                    style: o
                };
                return {
                    tag: "div",
                    attrs: u,
                    children: [ {
                        tag: "div",
                        attrs: {
                            "class": "front"
                        },
                        children: [ e ]
                    }, {
                        tag: "div",
                        attrs: {
                            "class": "back"
                        },
                        children: [ t ]
                    } ]
                };
            }
            function c(e, t, n, r, o) {
                var u = e.data, l = j["default"].classSet({
                    selected: u.selected === n
                }), d = {
                    key: n,
                    style: i(t),
                    "class": [ a(r), l ].join(" ")
                };
                o && (d["class"] += " " + o);
                var s = e.data.draggable.current;
                if (s.dragGroup && -1 !== s.dragGroup.indexOf(n) ? (d.style[j["default"].transformProp()] = j["default"].translate([ s.pos[0] + s.dec[0], s.pos[1] + s.dec[1] ]), 
                d["class"] += " group dragging") : s.orig === n && (s.over && j["default"].isOpensKey(s.over) && (d.style.width = s.opensBounds.width / j["default"].miniColumns + "px", 
                d.style.height = s.opensBounds.height / j["default"].miniRows + "px"), d.style[j["default"].transformProp()] = j["default"].translate([ s.pos[0] + s.dec[0], s.pos[1] + s.dec[1] ]), 
                d["class"] += " dragging"), e.data.animation.current.anims) {
                    var f = e.data.animation.current.anims[n];
                    f && (d["class"] += " animating", d.style[j["default"].transformProp()] = j["default"].translate(f[1]));
                }
                return {
                    tag: "piece",
                    attrs: d
                };
            }
            function p(e, t, n) {
                return {
                    tag: "div",
                    attrs: {
                        "class": e + " oc " + n
                    }
                };
            }
            function v(e, t, n) {
                return {
                    tag: "div",
                    attrs: {
                        style: o(n),
                        "class": e + " oc"
                    }
                };
            }
            function m(e, t, n) {
                return {
                    tag: "div",
                    attrs: {
                        style: i(n),
                        "class": e
                    }
                };
            }
            function g(e) {
                function t(e) {
                    return {
                        tag: "div",
                        attrs: {
                            "class": "wood " + e
                        }
                    };
                }
                var n, r = e.data, a = j["default"].allPos, i = [];
                i.push(t("left"), t("right"));
                for (var o = 0; o < a.length; o++) {
                    var u = j["default"].pos2key(a[o]), l = r.pieces[u];
                    if (l) {
                        var d = c(e, a[o], u, l);
                        if (r.flippable.current.orig === u) {
                            var s, p, v = r.flippable.current.flip, g = c(e, a[o], u, j["default"].emptyPiece);
                            l.flip ? (s = g, p = d) : (s = d, p = g), i.push(f(s, p, v));
                        } else l.flip && (d = c(e, a[o], u, j["default"].emptyPiece)), i.push(d);
                    }
                    r.draggable.current.over === u && (n = m("drag-over", e, a[o]));
                }
                return r.middleHolder.key && i.push(c(e, j["default"].key2pos(r.middleHolder.key), r.middleHolder.key, j["default"].emptyPiece, "loading")), 
                n && i.push(n), {
                    tag: "div",
                    attrs: {
                        config: function(t, n, r) {
                            n || (e.data.boardBounds = j["default"].memo(t.getBoundingClientRect.bind(t)));
                        },
                        "class": "og-board"
                    },
                    children: i
                };
            }
            function h(e, t) {
                for (var n = e.data, r = j["default"].miniAllPos, a = [], i = [], o = 0; o < r.length; o++) {
                    var l = j["default"].miniPos2key(r[o]), d = t[l];
                    if (d && a.push(u(e, r[o], l, d)), e.data.animation.current.anims) {
                        var s = e.data.animation.current.anims[l];
                        d = e.data.animation.current.extra[l], s && d && a.push(u(e, r[o], l, d));
                    }
                    var f = j["default"].classSet({
                        "drag-over": n.draggable.current.over === l,
                        "move-dest": j["default"].containsX(n.openable.dests, l)
                    });
                    "" !== f && i.push(v(f, e, r[o]));
                }
                return a.push(i), a;
            }
            function y(e) {
                var t = e.data, n = h(e, t.opens.layout.layout);
                return {
                    tag: "div",
                    attrs: {
                        config: function(t, n, r) {
                            n || (e.data.opensBounds = j["default"].memo(t.getBoundingClientRect.bind(t)));
                        },
                        "class": "og-opens"
                    },
                    children: n
                };
            }
            function w(e) {
                var t = e.data, n = [], r = [];
                for (var a in t.discards) {
                    var i = t.discards[a][0], o = j["default"].classSet({
                        "drag-over": t.draggable.current.over === a,
                        "move-dest": "ddown" === a && t.selected && j["default"].isBoardKey(t.selected) && j["default"].containsX(t.movable.dests, L["default"].discard),
                        "last-move": t.lastMove && j["default"].containsX(t.lastMove, a)
                    });
                    if (i) {
                        t.discards[a][1] && r.push(d(e, a, t.discards[a][1], "fake", !1)), r.push(d(e, a, i, o));
                        var u = L["default"].drawLeft + a, l = e.data.animation.current.anims ? e.data.animation.current.anims[u] : !1;
                        if (l) {
                            var f = e.data.animation.current.extra.piece;
                            r.push(d(e, a, f, o, !0, u));
                        }
                    } else n.push(s(e, a, o));
                }
                return n.push(r), n;
            }
            function b(e) {
                var t = e.data, n = [], r = t.middleHolder.piece || j["default"].emptyPiece;
                if (n.push(d(e, j["default"].gosterge, t.middles[j["default"].gosterge])), n.push(l(e, j["default"].middleCount, j["default"].emptyPiece)), 
                j["default"].isMiddleKey(t.draggable.current.orig) || t.animation.current.anims && t.animation.current.anims[j["default"].middleCount]) {
                    var a = l(e, j["default"].middleCount, r, !0);
                    n.push(a);
                }
                return t.draggable.current.over === j["default"].gosterge && n.push(p("drag-over", e, j["default"].gosterge)), 
                n;
            }
            function P(e) {
                var t = [], n = e.data.topHooks;
                return n && t.push(n), t;
            }
            function k(e) {
                var t = [ b(e), w(e), y(e), P(e) ];
                return {
                    tag: "div",
                    attrs: {
                        config: function(t, n, r) {
                            n || (e.data.topBounds = j["default"].memo(t.getBoundingClientRect.bind(t)));
                        },
                        "class": "og-top"
                    },
                    children: t
                };
            }
            function O(e) {
                return [ k(e), g(e) ];
            }
            function x(e, t, n) {
                return function(r) {
                    j["default"].isRightButton(r) ? n(e, r) : t(e, r);
                };
            }
            function S(e, t, n) {
                var r = e.data, a = x(r, D["default"].start, T["default"].start), i = x(r, D["default"].move, T["default"].move), o = x(r, D["default"].end, T["default"].end), u = [ "touchstart", "mousedown" ], l = [ "touchmove", "mousemove" ], d = [ "touchend", "mouseup" ];
                u.forEach(function(e) {
                    t.addEventListener(e, a);
                }), l.forEach(function(e) {
                    document.addEventListener(e, i);
                }), d.forEach(function(e) {
                    document.addEventListener(e, o);
                }), n.onunload = function() {
                    u.forEach(function(e) {
                        t.removeEventListener(e, a);
                    }), l.forEach(function(e) {
                        document.removeEventListener(e, i);
                    }), d.forEach(function(e) {
                        document.removeEventListener(e, o);
                    });
                };
            }
            function E(e) {
                return {
                    tag: "div",
                    attrs: {
                        "class": "og-table",
                        config: function(t, n, r) {
                            n || (S(e, t, r), // this function only repaints the board itself
                            // it's called when dragging or animating pieces,
                            // to prevent the full application embedding okeyground
                            // rendering on every animation frame
                            e.data.render = function() {
                                C["default"].render(t, O(e));
                            }, e.data.renderRAF = function() {
                                j["default"].requestAnimationFrame(e.data.render);
                            }, e.data.bounds = j["default"].memo(t.getBoundingClientRect.bind(t)), e.data.element = t, 
                            e.data.render());
                        }
                    },
                    children: []
                };
            }
            var M = e("mithril"), C = r(M), K = e("./drag"), D = r(K), A = e("./draw"), T = r(A), B = e("./util"), j = r(B), R = e("./move"), L = r(R);
            t.exports = function(e) {
                return {
                    tag: "div",
                    attrs: {
                        config: function(t, n) {
                            n || (t.addEventListener("contextmenu", function(e) {
                                return e.preventDefault(), !1;
                            }), [ "onscroll", "onresize" ].forEach(function(t) {
                                var n = window[t];
                                window[t] = function() {
                                    n && n(), e.data.bounds.clear(), e.data.boardBounds.clear(), e.data.opensBounds.clear(), 
                                    e.data.topBounds.clear();
                                };
                            }));
                        },
                        "class": [ "og-table-wrap" ].join(" ")
                    },
                    children: [ E(e) ]
                };
            };
        }, {
            "./drag": 9,
            "./draw": 10,
            "./move": 12,
            "./util": 16,
            mithril: 2
        } ]
    }, {}, [ 11 ])(11);
});